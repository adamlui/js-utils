const fs=require("fs"),execSync=require("child_process")["execSync"],path=require("path"),nc="[0m",br="[1;91m",bg="[1;92m",inputArg="test/input",outputArg="output/min",testCmd=`node ../minify.js ${inputArg} `+outputArg;console.info(`
> Running '${testCmd}'...`);try{execSync(testCmd)}catch(e){console.error(`
${br}Error executing command: `+testCmd+nc),process.exit(1)}console.info("> Comparing generated files to expected output...");const inputDir=path.resolve(__dirname,"input"),expectedOutputDir=path.resolve(__dirname,"expected_output"),file1Expected=fs.readFileSync(path.resolve(expectedOutputDir,outputArg,"file1.min.js"),"utf8"),file2Expected=fs.readFileSync(path.resolve(expectedOutputDir,"nested/dir",outputArg,"file2.min.js"),"utf8"),file1Actual=fs.readFileSync(path.resolve(inputDir,outputArg,"file1.min.js"),"utf8"),file2Actual=fs.readFileSync(path.resolve(inputDir,"nested/dir/",outputArg,"file2.min.js"),"utf8");console.info("> Cleaning up generated files/folders..."),fs.rmSync(path.resolve(inputDir,outputArg.split("/")[0]),{recursive:!0}),fs.rmSync(path.resolve(inputDir,"nested/dir",outputArg.split("/")[0]),{recursive:!0}),file1Actual===file1Expected&&file2Actual===file2Expected?console.info(`
${bg}Test passed: Minification/recursion succeeded!`+nc):(console.error(`
${br}Test failed: Generated files do not match expected output.`+nc),process.exit(1));
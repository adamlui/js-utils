#!/usr/bin/env node
const fs=require("fs"),path=require("path"),uglifyJS=require("uglify-js");function findJS(i,r={}){var e="https://docs.minify-js.org/#findjssearchdir-options",o={recursive:!0,verbose:!0,dotFolders:!1,dotFiles:!1};if("string"!=typeof i)console.error("findJS() » ERROR: 1st arg <searchDir> must be a string."),console.info("findJS() » For more help, please visit "+e);else{var n=path.resolve(process.cwd(),i);if(fs.existsSync(n)){if(validateOptions(r,o,e,"findJS('assets/js', { verbose: false, dotFoldes: true })")){r={...o,...r};const s=fs.readdirSync(i),t=[];return r.verbose&&!r.isRecursing&&console.info("findJS() » Searching for unminified JS files..."),s.forEach(e=>{var o=path.resolve(i,e);fs.statSync(o).isDirectory()&&"node_modules"!=e&&(r.dotFolders||!e.startsWith("."))&&r.recursive?t.push(...findJS(o,{...r,isRecursing:!0})):!/\.js(?<!\.min\.js)$/.test(e)||!r.dotFiles&&e.startsWith(".")||t.push(o)}),!r.isRecursing&&r.verbose&&(console.info("findJS() » Search complete! "+(0===t.length?"No":t.length)+` file${0==t.length||1<t.length?"s":""} found.`),"minify"===findJS.caller.name||process.argv.some(e=>e.includes("gulp"))||/cli(?:\.min)?\.js$/.test(require.main.filename)||console.info("findJS() » Check returned array.")),r.isRecursing||0<t.length?t:[]}}else console.error("findJS() » ERROR: 1st arg <searchDir> must be an existing directory."),console.error(`findJS() » ${n} does not exist.`),console.info("findJS() » For more help, please visit "+e)}}function minify(e,i={}){var o="https://docs.minify-js.org/#minifyinput-options",r={recursive:!0,verbose:!0,dotFolders:!1,dotFiles:!1,mangle:!0,comment:""};if("string"!=typeof e)console.error("minify() » ERROR: 1st arg <input> must be a string."),console.info("minify() » For more help, please visit "+o);else if(validateOptions(i,r,o,"minify('assets/js', { recursive: false, mangle: false })")){const s={mangle:(i={...r,...i}).mangle};return fs.existsSync(e)?e.endsWith(".js")?(i.verbose&&console.info(`minify() » Minifying ${e}...`),o=uglifyJS.minify(fs.readFileSync(e,"utf8"),s),i.comment&&(o.code=n(o.code)),o.error?console.error("minify() » ERROR: "+o.error.message):!i.verbose||process.argv.some(e=>e.includes("gulp"))||/cli(?:\.min)?\.js$/.test(require.main.filename)||console.info("minify() » Minification complete. Check returned object."),{code:o.code,srcPath:path.resolve(process.cwd(),e),error:o.error}):(r=findJS(e,{recursive:i.recursive,verbose:i.verbose,dotFolders:i.dotFolders,dotFiles:i.dotFiles})?.map(e=>{i.verbose&&console.info(`minify() » Minifying ${e}...`);var o=fs.readFileSync(e,"utf8"),o=uglifyJS.minify(o,s);return i.comment&&(o.code=n(o.code)),o.error&&console.error("minify() » ERROR: "+o.error.message),{code:o.code,srcPath:e,error:o.error}}).filter(e=>!e.error),i.verbose&&(0<r.length?console.info("minify() » Minification complete. Check returned object."):console.info("minify() » No unminified JavaScript files processed.")),r):(i.verbose&&!process.argv.some(e=>e.includes("gulp"))&&console.info("minify() » Minifying passed source code..."),o=uglifyJS.minify(e,s),i.comment&&(o.code=n(o.code)),o.error?console.error("minify() » ERROR: "+o.error.message):i.verbose&&!process.argv.some(e=>e.includes("gulp"))&&console.info("minify() » Minification complete. Check returned object."),{code:o.code,srcPath:void 0,error:o.error});function n(e){return`/*
  ${i.comment}
*/
`+e}}}function validateOptions(e,o,i,r){const n=JSON.stringify(o,null,2).replace(/"([^"]+)":/g,"$1:").replace(/"/g,"'").replace(/\n\s*/g," "),s=Object.keys(o).join(", "),t=Object.keys(o).filter(e=>"boolean"==typeof o[e]),l=Object.keys(o).filter(e=>Number.isInteger(o[e])),c=(validateOptions.caller?.name||"validateOptions")+"() » ";var f=()=>{console.info(c+`Valid options: [ ${s} ]`),console.info(c+"If omitted, default settings are: "+n)},a=()=>{console.info(c+"For more help, please visit "+i)};if("object"!=typeof e)return console.error(c+"ERROR: [options] can only be an object of key/values."),console.info(c+"Example valid call: "+r),f(),a(),!1;for(const m in e){if("isRecursing"!=m&&!Object.prototype.hasOwnProperty.call(o,m))return console.error(c+`ERROR: \`${m}\` is an invalid option.`),f(),a(),!1;if(t.includes(m)){if("mangle"==m){var d=()=>console.error(c+"ERROR: [mangle] option can only be `true`, `false`, or an object w/ key [toplevel] set to `true` or `false`.");if("object"==typeof e.mangle){for(const u in e.mangle)if(!["toplevel"].includes(u)||"boolean"!=typeof e.mangle[u])return d(),a(),!1}else if("boolean"!=typeof e.mangle)return d(),a(),!1}else if("boolean"!=typeof e[m])return console.error(c+`ERROR: [${m}] option can only be \`true\` or \`false\`.`),a(),!1}else if(l.includes(m)&&(e[m]=parseInt(e[m],10),isNaN(e[m])||e[m]<1))return console.error(c+`ERROR: [${m}] option can only be an integer > 0.`),a(),!1}return!0}module.exports={minify:minify,find:findJS,findJS:findJS};
#!/usr/bin/env node
/**
 *  © 2023–2024 Adam Lui & contributors under the MIT license.
 *  Source: https://code.minify-js.org/node.js
 *  Documentation: https://docs.minify-js.org/node.js
 */
const fs=require("fs"),path=require("path"),uglifyJS=require("uglify-js");function findJS(o,n={}){var e="https://docs.minify-js.org/node.js/#findjssearchdir-options",i={recursive:!0,verbose:!0,dotFolders:!1,dotFiles:!1,ignoreFiles:[]};if("string"!=typeof o)console.error("findJS() » ERROR: 1st arg <searchDir> must be a string."),console.info("findJS() » For more help, please visit "+e);else{var r=path.resolve(process.cwd(),o);if(fs.existsSync(r)){if(validateOptions(n,i,e,"findJS('assets/js', { verbose: false, dotFoldes: true })")){n={...i,...n};const s=fs.readdirSync(o),t=[];return n.verbose&&!n.isRecursing&&console.info("findJS() » Searching for unminified JS files..."),s.forEach(e=>{var i=path.resolve(o,e);fs.statSync(i).isDirectory()&&"node_modules"!=e&&n.recursive&&(n.dotFolders||!e.startsWith("."))?t.push(...findJS(i,{...n,isRecursing:!0})):!/\.js(?<!\.min\.js)$/.test(e)||!n.dotFiles&&e.startsWith(".")||n.ignoreFiles.includes(e)?n.verbose&&n.ignoreFiles.includes(e)&&console.info(`findJS() » ** ${e} ignored due to [options.ignoreFiles]`):t.push(i)}),n.verbose&&!n.isRecursing&&(console.info("findJS() » Search complete! "+(0==t.length?"No":t.length)+` file${1==t.length?"":"s"} found.`),"minify"!=findJS.caller.name)&&"undefined"!=typeof window&&console.info("findJS() » Check returned array."),n.isRecursing||0<t.length?t:[]}}else console.error("findJS() » ERROR: 1st arg <searchDir> must be an existing directory."),console.error(`findJS() » ${r} does not exist.`),console.info("findJS() » For more help, please visit "+e)}}function minify(e,o={}){var i="https://docs.minify-js.org/node.js/#minifyinput-options",n={recursive:!0,verbose:!0,dotFolders:!1,dotFiles:!1,mangle:!0,ignoreFiles:[],comment:""};if("string"!=typeof e)console.error("minify() » ERROR: 1st arg <input> must be a string."),console.info("minify() » For more help, please visit "+i);else if(validateOptions(o,n,i,"minify('assets/js', { recursive: false, mangle: false })")){const s={mangle:!!(o={...n,...o}).mangle&&{toplevel:!1}};return fs.existsSync(e)?e.endsWith(".js")?(o.verbose&&console.info(`minify() » ** Minifying ${e}...`),i=uglifyJS.minify(fs.readFileSync(e,"utf8"),s),o.comment&&(i.code=r(i.code,o.comment)),i.error?console.error("minify() » ERROR: "+i.error.message):o.verbose&&"undefined"!=typeof window&&console.info("minify() » Minification complete! Check returned object."),{code:i.code,srcPath:path.resolve(process.cwd(),e),error:i.error}):(n=findJS(e,{recursive:o.recursive,verbose:o.verbose,dotFolders:o.dotFolders,dotFiles:o.dotFiles,ignoreFiles:o.ignoreFiles})?.map(e=>{o.verbose&&console.info(`minify() » ** Minifying ${e}...`);var i=fs.readFileSync(e,"utf8"),i=uglifyJS.minify(i,s);return o.comment&&(i.code=r(i.code,o.comment)),i.error&&console.error("minify() » ERROR: "+i.error.message),{code:i.code,srcPath:e,error:i.error}}).filter(e=>!e.error),o.verbose&&(0<n.length&&"undefined"!=typeof window?console.info("minify() » Minification complete! Check returned object."):console.info("minify() » No unminified JavaScript files processed.")),n):(o.verbose&&!process.argv.some(e=>e.includes("gulp"))&&console.info("minify() » ** Minifying passed source code..."),i=uglifyJS.minify(e,s),o.comment&&(i.code=r(i.code,o.comment)),i.error?console.error("minify() » ERROR: "+i.error.message):o.verbose&&!process.argv.some(e=>e.includes("gulp"))&&console.info("minify() » Minification complete! Check returned object."),{code:i.code,srcPath:void 0,error:i.error});function r(e,i){var i=i.split("\n").map(e=>" * "+e).join("\n"),o=e.indexOf("#!");return 0<=o?(o=e.indexOf("\n",o)+1,e.slice(0,o)+`/**
${i}
 */
`+e.slice(o)):`/**
${i}
 */
`+e}}}function validateOptions(e,i,o,n){const r=JSON.stringify(i,null,2).replace(/"([^"]+)":/g,"$1:").replace(/"/g,"'").replace(/\n\s*/g," "),s=Object.keys(i).join(", "),t=Object.keys(i).filter(e=>"boolean"==typeof i[e]),l=Object.keys(i).filter(e=>Number.isInteger(i[e])),c=Object.keys(i).filter(e=>Array.isArray(i[e]));let f="validateOptions() » ";try{f=validateOptions.caller?.name+"() » "}catch(e){}var d=n.split(",").findIndex(e=>e.trim().startsWith("{"))+1,a=(d+=["st","nd","rd"][d-1]||"th",()=>{console.info(`${f}Valid options: [ ${s} ]`),console.info(f+"If omitted, default settings are: "+r)}),m=()=>{console.info(f+"For more help, please visit "+o)};if("object"!=typeof e)return console.error(f+`ERROR: ${"0th"==d?"[O":d+" arg [o"}ptions] can only be an object of key/values.`),console.info(f+"Example valid call: "+n),a(),m(),!1;for(const u in e){if("isRecursing"!=u&&!Object.prototype.hasOwnProperty.call(i,u))return console.error(`${f}ERROR: \`${u}\` is an invalid option.`),a(),m(),!1;if(t.includes(u)&&"boolean"!=typeof e[u])return console.error(`${f}ERROR: [${u}] option can only be \`true\` or \`false\`.`),m(),!1;if(l.includes(u)){if(e[u]=parseInt(e[u],10),isNaN(e[u])||e[u]<1)return console.error(`${f}ERROR: [${u}] option can only be an integer > 0.`),m(),!1}else if(c.includes(u))if("string"!=typeof e[u]||e[u].includes(",")){if(!Array.isArray(e[u]))return console.error(`${f}ERROR: [${u}] option can only be an array.`),m(),!1}else e[u]=[e[u]]}return!0}const mjsAliases={minify:["build","Build","compile","Compile","compress","Compress","Minify"],findJS:["find","Find","findjs","findJs","Findjs","FindJs","FindJS","search","Search"]};module.exports={minify:minify,findJS:findJS};for(const Z in mjsAliases)mjsAliases[Z].forEach(e=>module.exports[e]=module.exports[Z]);
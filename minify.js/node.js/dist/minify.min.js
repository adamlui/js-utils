#!/usr/bin/env node
const c=require("fs"),l=require("path"),s=require("uglify-js");function f(r,i={}){var e="https://docs.minify-js.org/#findjssearchdir-options",o={recursive:!0,verbose:!0,dotFolders:!1,dotFiles:!1};if("string"!=typeof r)console.error("findJS() » ERROR: 1st arg <searchDir> must be a string."),console.info("findJS() » For more help, please visit "+e);else{var n=l.resolve(process.cwd(),r);if(c.existsSync(n)){if(d(i,o,"findJS('assets/js', { verbose: false, dotFoldes: true })")){i={...o,...i};const s=c.readdirSync(r),t=[];return i.verbose&&!i.isRecursing&&console.info("findJS() » Searching for unminified JS files..."),s.forEach(e=>{var o=l.resolve(r,e);c.statSync(o).isDirectory()&&"node_modules"!=e&&(i.dotFolders||!e.startsWith("."))&&i.recursive?t.push(...f(o,{...i,isRecursing:!0})):!/\.js(?<!\.min\.js)$/.test(e)||!i.dotFiles&&e.startsWith(".")||t.push(o)}),!i.isRecursing&&i.verbose&&(console.info("findJS() » Search complete! "+(0===t.length?"No":t.length)+` file${0==t.length||1<t.length?"s":""} found.`),"minify"===f.caller.name||require.main.filename.endsWith("cli.js")||console.info("findJS() » Check returned array.")),i.isRecursing||0<t.length?t:[]}}else console.error("findJS() » ERROR: 1st arg <searchDir> must be an existing directory."),console.error(`findJS() » ${n} does not exist.`),console.info("findJS() » For more help, please visit "+e)}}function e(e,r={}){var o={recursive:!0,verbose:!0,dotFolders:!1,dotFiles:!1,mangle:!0,comment:""};if("string"!=typeof e)console.error("minify() » ERROR: 1st arg <input> must be a string."),console.info("minify() » For more help, please visit https://docs.minify-js.org/#minifyinput-options");else if(d(r,o,"minify('assets/js', { recursive: false, mangle: false })")){const n={mangle:!!(r={...o,...r}).mangle&&{toplevel:!0}};return c.existsSync(e)?e.endsWith(".js")?(r.verbose&&console.info(`minify() » Minifying ${e}...`),o=s.minify(c.readFileSync(e,"utf8"),n),r.comment&&(o.code=i(o.code)),o.error?console.error("minify() » ERROR: "+o.error.message):r.verbose&&!require.main.filename.endsWith("cli.js")&&console.info("minify() » Minification complete. Check returned object."),{code:o.code,srcPath:l.resolve(process.cwd(),e),error:o.error}):(o=f(e,{recursive:r.recursive,verbose:r.verbose,dotFolders:r.dotFolders,dotFiles:r.dotFiles})?.map(e=>{r.verbose&&console.info(`minify() » Minifying ${e}...`);var o=c.readFileSync(e,"utf8"),o=s.minify(o,n);return r.comment&&(o.code=i(o.code)),o.error&&console.error("minify() » ERROR: "+o.error.message),{code:o.code,srcPath:e,error:o.error}}).filter(e=>!e.error),r.verbose&&(0<o.length?console.info("minify() » Minification complete. Check returned object."):console.info("minify() » No unminified JavaScript files processed.")),o):(r.verbose&&console.info("minify() » Minifying passed source code..."),o=s.minify(e,n),r.comment&&(o.code=i(o.code)),o.error?console.error("minify() » ERROR: "+o.error.message):r.verbose&&console.info("minify() » Minification complete. Check returned object."),{code:o.code,srcPath:void 0,error:o.error});function i(e){return`/*
  ${r.comment}
*/
`+e}}}function d(e,o,r){const i=JSON.stringify(o,null,2).replace(/"([^"]+)":/g,"$1:").replace(/"/g,"'").replace(/\n\s*/g," "),n=Object.keys(o).join(", "),s=Object.keys(o).filter(e=>"boolean"==typeof o[e]),t=Object.keys(o).filter(e=>Number.isInteger(o[e])),c=(d.caller?.name||"validateOptions")+"() » ";var l=()=>{console.info(c+`Valid options: [ ${n} ]`),console.info(c+"If omitted, default settings are: "+i)},f=()=>{console.info(c+"For more help, please visit https://docs.minify-js.org/#-api-usage")};if("object"!=typeof e)return console.error(c+"ERROR: [options] can only be an object of key/values."),console.info(c+"Example valid call: "+r),l(),f(),!1;for(const a in e){if("isRecursing"!=a&&!Object.prototype.hasOwnProperty.call(o,a))return console.error(c+`ERROR: \`${a}\` is an invalid option.`),l(),f(),!1;if(s.includes(a)&&"boolean"!=typeof e[a])return console.error(c+`ERROR: [${a}] option can only be \`true\` or \`false\`.`),f(),!1;if(t.includes(a)&&(e[a]=parseInt(e[a],10),isNaN(e[a])||e[a]<1))return console.error(c+`ERROR: [${a}] option can only be an integer > 0.`),f(),!1}return!0}module.exports={minify:e,find:f,findJS:f};
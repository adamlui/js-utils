#!/usr/bin/env node
/**
 *  Â© 2023â€“2024 Adam Lui & contributors under the MIT license.
 *  Source: https://code.minify-js.org/node.js
 *  Documentation: https://docs.minify-js.org/node.js
 */
const pkgName="@adamlui/minify.js",copyright="Â© 2024 Adam Lui & contributors under the MIT license.",cmdFormat="minify-js [inputPath] [outputPath] [options]",srcURL="https://code.minify-js.org/node.js",docURL="https://docs.minify-js.org/node.js/#-command-line-usage";(async()=>{const i=require(__dirname.match(/src/)?"./minify":"./minify.min"),n=require("fs"),s=require("path"),r=require("child_process")["execSync"],t="[0m",a="[1;91m",l="[1;33m",c="[1;92m",m="[1;97m";let f="en";if("win32"==process.platform)try{f=r("(Get-Culture).TwoLetterISOLanguageName",{shell:"powershell",encoding:"utf-8"}).trim()}catch(e){}else{var d=process.env;f=(d.LANG||d.LANGUAGE||d.LC_ALL||d.LC_MESSAGES||d.LC_NAME||"en").split(".")[0]}let p={};d=new Promise((r,t)=>{const a="https://cdn.jsdelivr.net/gh/adamlui/js-utils@2ca71a5c8c3dab0508a11c1b666237461796b508/geolocate/_locales/",e=(f?f.replace("-","_"):"en")+"/";let l=a+e+"messages.json",c=0;$(l).then(async function o(e){try{const i=await e.json(),n={};for(const s in i)"object"==typeof i[s]&&"message"in i[s]&&(n[s]=i[s].message);r(n)}catch(e){if(3==++c)return r({});$(l=f.includes("-")&&1==c?l.replace(/([^_]*)_[^/]*(\/.*)/,"$1$2"):a+"en/messages.json").then(o).catch(t)}}).catch(t)});try{p=await d}catch(e){}const u={},h={flags:{dryRun:/^--?(?:n|dry-?run)$/,includeDotFolders:/^--?(?:dd?|(?:include-?)?dot-?(?:folder|dir(?:ector(?:y|ie))?)s?=?(?:true|1)?)$/,includeDotFiles:/^--?(?:df|D|(?:include-?)?dot-?files?=?(?:true|1)?)$/,noRecursion:/^--?(?:R|(?:disable|no)-?recursi(?:on|ve)|recursi(?:on|ve)=(?:false|0))$/,noMangle:/^--?(?:M|(?:disable|no)-?mangle|mangle=(?:false|0))$/,quietMode:/^--?q(?:uiet)?(?:-?mode)?$/},paramOptions:{ignoreFiles:/^--?(?:ignore|skip|exclude)(?:d?-?files?)?(?:=.*|$)/,comment:/^--?comments?(?:=.*|$)/},infoCmds:{help:/^--?h(?:elp)?$/,version:/^--?ve?r?s?i?o?n?$/}};if(process.argv.forEach(o=>{var e,i,n;o.startsWith("-")&&(n=Object.keys(h.flags).find(e=>h.flags[e].test(o)),e=Object.keys(h.paramOptions).find(e=>h.paramOptions[e].test(o)),i=Object.keys(h.infoCmds).find(e=>h.infoCmds[e].test(o)),n?u[n]=!0:e?(/=.+/.test(o)||(console.error(`
${a+(p.prefix_error||"ERROR")}: `+`Arg [--${o.replace(/-/g,"")}] `+`${p.error_noEqual||"requires '=' followed by a value"}.${t}`),v(),process.exit(1)),n=o.split("=")[1],u[e]=parseInt(n)||n):i||(console.error(`
${a+(p.prefix_error||"ERROR")}: `+`Arg [${o}] ${p.error_notRecognized||"not recognized"}.[0m`),console.info(`
${l+(p.info_validArgs||"Valid arguments are below")}.[0m`),_(["flags","paramOptions","infoCmds"]),process.exit(1)))}),process.argv.some(e=>h.infoCmds.help.test(e)))_();else if(process.argv.some(e=>h.infoCmds.version.test(e))){d=r(`npm view ${pkgName} version`).toString().trim()||"none";let e,o=process.cwd();for(;"/"!=o;){var g=s.join(o,"package.json");if(n.existsSync(g)){g=require(g);e=(g.dependencies?.[pkgName]||g.devDependencies?.[pkgName])?.match(/(\d+\.\d+\.\d+)/)[0]||"none";break}o=s.dirname(o)}console.info(`
${p.prefix_globalVer||"Global version"}: `+d),console.info(`${p.prefix_localVer||"Local version"}: `+e)}else{const[y="",j=""]=process.argv.slice(2).filter(e=>!e.startsWith("-")).map(e=>e.replace(/^\/*/,""));d=s.resolve(process.cwd(),y),d=(y&&!n.existsSync(d)&&(console.error(`
${a+(p.prefix_error||"ERROR")}: `+`${p.error_firstArgNotExist||"First argument can only be an existing file or directory"}.`+`
${d} ${p.error_doesNotExist||"does not exist"}.[0m`),console.info(`
${c}${p.info_exampleValidCmd||"Example valid command"}: `+`
Â» minify-js . output.min.js[0m`),v(),process.exit(1)),y.endsWith(".js")?[d]:i.findJS(d,{recursive:!u.noRecursion,verbose:!u.quietMode,ignoreFiles:(u.ignoreFiles?.split(",")??[]).map(e=>e.trim())}));if(u.dryRun)0<d.length?(console.info(`
${l+(p.info_filesToBeMinned||"JS files to be minified")}:[0m`),d.forEach(e=>console.info(e))):console.info(`
${l+(p.info_noFilesWillBeMinned||"No JS files will be minified")}.[0m`);else{const S=[];d=d.map(e=>{var o=i.minify(e,{verbose:!u.quietMode,mangle:!u.noMangle,comment:u.comment?.replace(/\\n/g,"\n")});return o.error&&S.push(e),o}).filter(e=>!e.error);d?.forEach(({code:e,srcPath:o})=>{var i=s.join(s.dirname(o),(/so?u?rce?$/.test(s.dirname(o))?"../":"")+(j.endsWith(".js")?s.dirname(j):j||"min")),o=(j.endsWith(".js")&&y.endsWith(".js")?s.basename(j).replace(/(\.min)?\.js$/,""):s.basename(o,".js"))+".min.js",o=s.join(i,o);n.existsSync(i)||n.mkdirSync(i,{recursive:!0}),n.writeFileSync(o,e,"utf8")}),0<d?.length?(o(`
${c+(p.info_minComplete||"Minification complete")}![0m`),o(m+d.length+" "+(p.info_file||"file")+`${1<d.length?"s":""} ${p.info_minified||"minified"}.${t}`)):o(l+(p.info_noFilesProcessed||"No unminified JavaScript files processed")+".[0m"),0<S.length&&(o(`
${a+S.length} `+(p.info_file||"file")+`${1<S.length?"s":""} ${p.info_failedToMinify||"failed to minify"}:${t}`),S.forEach(e=>o(e)))}}function $(n){return new Promise((i,e)=>{var o=n.match(/^([^:]+):\/\//)[1];/^https?$/.test(o)||e(new Error(`${p.error_invalidURL||"Invalid URL"}.`)),require(o).get(n,e=>{let o="";e.on("data",e=>o+=e),e.on("end",()=>i({json:()=>JSON.parse(o)}))}).on("error",e)})}function _(e=["header","usage","pathArgs","flags","paramOptions","infoCmds"]){var o=`[106m[30m ${pkgName.replace(/^@[^/]+\//,"")} [0m `;const i={header:["\nâ”œ "+o+(p.appCopyright||copyright),o+(p.prefix_source||"Source")+": "+srcURL],usage:[`
${m}o ${p.helpSection_usage||"Usage"}:[0m`,` ${m}Â» `+c+cmdFormat+t],pathArgs:[`
${m}o ${p.helpSection_pathArgs||"Path arguments"}:[0m`," [inputPath]                         "+`${p.inputPathDesc_main||"Path to JS file or directory containing JS files to be minified"}, `+`${p.inputPathDesc_extra||"relative to the current working directory"}.`," [outputPath]                        "+`${p.outputPathDesc_main||"Path to file or directory where minified files will be stored"}, `+`${p.outputPathDesc_extra||"relative to original file location (if not provided, min/ is used)"}.`],flags:[`
${m}o ${p.helpSection_flags||"Boolean options"}:[0m`," -n, --dry-run                       "+`${p.optionDesc_dryRun||"Don't actually minify the file(s), just show if they will be processed"}.`,` -d, --include-dotfolders            ${p.optionDesc_dotfolders||"Include dotfolders in file search"}.`,` -D, --include-dotfiles              ${p.optionDesc_dotfiles||"Include dotfiles in file search"}.`,` -R, --no-recursion                  ${p.optionDesc_noRecursion||"Disable recursive file searching"}.`,` -M, --no-mangle                     ${p.optionDesc_noMangle||"Disable mangling names"}.`,` -q, --quiet                         ${p.optionDesc_quiet||"Suppress all logging except errors"}.`],paramOptions:[`
${m}o ${p.helpSection_paramOptions||"Parameter options"}:[0m`,`--ignore-files="file1.js,file2.js"   ${p.optionDesc_ignoreFiles||"Files to exclude from minification"}.`,`--comment="comment"                  ${p.optionDesc_commentMain||"Prepend comment to minified code"}.`+` ${p.optionDesc_commentExtra||"Separate by line using '\\n'"}.`],infoCmds:[`
${m}o ${p.helpSection_infoCmds||"Info commands"}:[0m`," -h, --help                          "+(p.optionDesc_help||"Display help screen."),` -v, --version                       ${p.optionDesc_version||"Show version number"}.`]};e.forEach(t=>{i[t]?.forEach(e=>{{var n=/header|usage/.test(t)?1:37;const s=process.stdout.columns||80,r=[],o=e.match(/\S+|\s+/g);let i="";o.forEach(e=>{var o=s-(0==r.length?0:n);i.length+"| ".length+e.length>o&&(r.push(0==r.length?i:i.trimStart()),i=""),i+=e}),r.push(0==r.length?i:i.trimStart()),r.forEach((e,o)=>console.info("| "+(0==o?e:" ".repeat(n)+e)))}})}),console.info(`
${p.info_moreHelp||"For more help"}, ${p.info_visit||"visit"}: `+m+docURL+t)}function v(){console.info(`
${p.info_moreHelp||"For more help"},`+` ${p.info_type||"type"} 'minify-js --help'`+` ${p.info_or||"or"} ${p.info_visit||"visit"}
`+m+docURL+t)}function o(e){u.quietMode||console.info(e)}})();
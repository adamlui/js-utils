#!/usr/bin/env node
const e="https://docs.minify-js.org/#-command-line-usage",n=require(__dirname.match(/src/)?"./minify":"./minify.min"),o=require("fs"),s=require("path"),r="[0m",t="[1;91m",l="[1;33m",i="[1;92m",a={},c={flags:{dryRun:/^--?(?:n|dry-?run)$/,includeDotFolders:/^--?(?:dd?|(?:include-?)?dot-?(?:folder|dir(?:ector(?:y|ie))?)s?=?(?:true|1)?)$/,includeDotFiles:/^--?(?:df|D|(?:include-?)?dot-?files?=?(?:true|1)?)$/,noRecursion:/^--?(?:R|(?:disable|no)-?recursi(?:on|ve)|recursi(?:on|ve)=(?:false|0))$/,noMangle:/^--?(?:M|(?:disable|no)-?mangle|mangle=(?:false|0))$/,quietMode:/^--?q(?:uiet)?(?:-?mode)?$/},paramOptions:{comment:/^--?comments?(?:=.*|$)/},infoCmds:{help:/^--?h(?:elp)?$/,version:/^--?ve?r?s?i?o?n?$/}};if(process.argv.forEach(i=>{var e,n,o;i.startsWith("-")&&(e=Object.keys(c.paramOptions).find(e=>c.paramOptions[e].test(i)),o=Object.keys(c.flags).find(e=>c.flags[e].test(i)),n=Object.keys(c.infoCmds).find(e=>c.infoCmds[e].test(i)),o?a[o]=!0:e?(i.includes("=")||(console.error(`
${t}ERROR: Arg [--${i.replace(/-/g,"")}] requires '=' followed by a value.`+r),d(),process.exit(1)),o=i.split("=")[1],a[e]=parseInt(o)||o):n||(console.error(`
${t}ERROR: Arg [${i}] not recognized.`+r),console.info(`
${l}Valid arguments are below.`+r),m(["flags","paramOptions","infoCmds"]),d(),process.exit(1)))}),process.argv.some(e=>c.infoCmds.help.test(e)))m();else if(process.argv.some(e=>c.infoCmds.version.test(e)))console.info("v"+require("./package.json").version);else{const[u="",p=""]=process.argv.slice(2).filter(e=>!e.startsWith("-")).map(e=>e.replace(/^\/*/,"")),h=s.resolve(process.cwd(),u),g=(u&&!o.existsSync(h)&&(console.error(`
${t}Error: First argument can only be an existing file or directory.`+`
${h} does not exist.`+r+`

${i}Example valid command: 
Â» minify-js . output.min.js`+r),d(),process.exit(1)),u.endsWith(".js")?[h]:n.findJS(h,{recursive:!a.noRecursion,verbose:!a.quietMode}));if(a.dryRun)0<g.length?(console.info(`
${l}JS files to be minified:`+r),g.forEach(e=>console.info(e))):console.info(l+`
No JS files will be minified.`+r);else{const v=[],y=g.map(e=>{var i=n.minify(e,{verbose:!a.quietMode,mangle:!a.noMangle,comment:a.comment});return i.error&&v.push(e),i}).filter(e=>!e.error);y?.forEach(({code:e,srcPath:i})=>{var n=s.join(s.dirname(i),(/so?u?rce?$/.test(s.dirname(i))?"../":"")+(p.endsWith(".js")?s.dirname(p):p||"min")),i=(p.endsWith(".js")&&u.endsWith(".js")?s.basename(p).replace(/(\.min)?\.js$/,""):s.basename(i,".js"))+".min.js",i=s.join(n,i);o.existsSync(n)||o.mkdirSync(n,{recursive:!0}),o.writeFileSync(i,e,"utf8")}),0<y?.length?(f(`
${i}Minification complete!`+r),f(`${y.length} file${1<y.length?"s":""} minified.`)):f(l+"No unminified JavaScript files processed."+r),0<v.length&&(f(`
`+t+v.length+" file"+(1<v.length?"s":"")+" failed to minify:"+r),v.forEach(e=>f(e)))}}function m(e=["cmdFormat","pathArgs","flags","paramOptions","infoCmds"]){const i={cmdFormat:[`
${l}minify-js [inputPath] [outputPath] [options]`+r],pathArgs:["\nPath arguments:"," [inputPath]                 Path to JS file or directory containing JS files to be minified, relative to the current working directory."," [outputPath]                Path to file or directory where minified files will be stored, relative to original file location (if not provided, min/ is used)."],flags:["\nBoolean options:"," -n, --dry-run               Don't actually minify the file(s), just show if they will be processed."," -d, --include-dotfolders    Include dotfolders in file search."," -D, --include-dotfiles      Include dotfiles in file search."," -R, --no-recursion          Disable recursive file searching."," -M, --no-mangle             Disable mangling names."," -q, --quiet                 Suppress all logging except errors."],paramOptions:["\nParameter options:"," --comment=comment           Prepend comment to minified code."],infoCmds:["\nInfo commands:"," -h, --help                  Display help screen."," -v, --version               Show version number."]};e.forEach(e=>{i[e]?.forEach(e=>{{const o=process.stdout.columns||80,s=[],i=e.match(/\S+|\s+/g);let n="";i.forEach(e=>{var i=o-(0===s.length?0:29);n.length+e.length>i&&(s.push(0===s.length?n:n.trimStart()),n=""),n+=e}),s.push(0===s.length?n:n.trimStart()),s.forEach((e,i)=>console.info(0===i?e:" ".repeat(29)+e))}})})}function d(){console.info(`
${l}For more help, type 'minify-js --help' or visit
`+(e+r))}function f(e){a.quietMode||console.info(e)}
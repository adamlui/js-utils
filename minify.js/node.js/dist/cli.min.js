#!/usr/bin/env node
/**
 *  Â© 2023â€“2024 Adam Lui & contributors under the MIT license.
 *  Source: https://code.minify-js.org/node.js
 *  Documentation: https://docs.minify-js.org/node.js
 */
const pkgName="@adamlui/minify.js",copyright="Â© 2024 Adam Lui & contributors under the MIT license.",cmdFormat="minify-js [inputPath] [outputPath] [options]",srcURL="https://code.minify-js.org/node.js",docURL="https://docs.minify-js.org/node.js/#-command-line-usage";(async()=>{const o=require(__dirname.match(/src/)?"./minify":"./minify.min"),n=require("fs"),s=require("path"),i=require("node-clipboardy"),r=require("child_process")["execSync"],t="[0m",a="[1;91m",l="[1;33m",c="[1;92m",m="[1;97m";let f="en";if("win32"==process.platform)try{f=r("(Get-Culture).TwoLetterISOLanguageName",{shell:"powershell",encoding:"utf-8"}).trim()}catch(e){}else{var d=process.env;f=(d.LANG||d.LANGUAGE||d.LC_ALL||d.LC_MESSAGES||d.LC_NAME||"en").split(".")[0]}let p={};d=new Promise((r,t)=>{const a="https://cdn.jsdelivr.net/gh/adamlui/minify.js@db5b8e1ff2e8b8d49d92535abd6cb9f685ed0bb9/_locales/",e=(f?f.replace("-","_"):"en")+"/";let l=a+e+"messages.json",c=0;$(l).then(async function i(e){try{const o=await e.json(),n={};for(const s in o)"object"==typeof o[s]&&"message"in o[s]&&(n[s]=o[s].message);r(n)}catch(e){if(3==++c)return r({});$(l=f.includes("-")&&1==c?l.replace(/([^_]*)_[^/]*(\/.*)/,"$1$2"):a+"en/messages.json").then(i).catch(t)}}).catch(t)});try{p=await d}catch(e){}const g={},h={flags:{dryRun:/^--?(?:n|dry-?run)$/,includeDotFolders:/^--?(?:dd?|(?:include-?)?dot-?(?:folder|dir(?:ector(?:y|ie))?)s?=?(?:true|1)?)$/,includeDotFiles:/^--?(?:df|D|(?:include-?)?dot-?files?=?(?:true|1)?)$/,noRecursion:/^--?(?:R|(?:disable|no)-?recursi(?:on|ve)|recursi(?:on|ve)=(?:false|0))$/,noMangle:/^--?(?:M|(?:disable|no)-?mangle|mangle=(?:false|0))$/,noFilenameChange:/^--?(?:X|(?:disable|no)-?(?:file)?name-?change|(?:file)?name-?change=(?:false|0))$/,copy:/^--?c(?:opy)?$/,quietMode:/^--?q(?:uiet)?(?:-?mode)?$/},paramOptions:{ignoreFiles:/^--?(?:ignore|skip|exclude)(?:d?-?files?)?(?:=.*|$)/,comment:/^--?comments?(?:=.*|$)/},infoCmds:{help:/^--?h(?:elp)?$/,version:/^--?ve?r?s?i?o?n?$/}};if(process.argv.forEach(i=>{var e,o,n;i.startsWith("-")&&(n=Object.keys(h.flags).find(e=>h.flags[e].test(i)),e=Object.keys(h.paramOptions).find(e=>h.paramOptions[e].test(i)),o=Object.keys(h.infoCmds).find(e=>h.infoCmds[e].test(i)),n?g[n]=!0:e?(/=.+/.test(i)||(console.error(`
${a+(p.prefix_error||"ERROR")}: `+`Arg [--${i.replace(/-/g,"")}] `+`${p.error_noEqual||"requires '=' followed by a value"}.${t}`),_(),process.exit(1)),n=i.split("=")[1],g[e]=parseInt(n)||n):o||(console.error(`
${a+(p.prefix_error||"ERROR")}: `+`Arg [${i}] ${p.error_notRecognized||"not recognized"}.[0m`),console.info(`
${l+(p.info_validArgs||"Valid arguments are below")}.[0m`),y(["flags","paramOptions","infoCmds"]),process.exit(1)))}),process.argv.some(e=>h.infoCmds.help.test(e)))y();else if(process.argv.some(e=>h.infoCmds.version.test(e))){d=r(`npm view ${pkgName} version`).toString().trim()||"none";let e,i=process.cwd();for(;"/"!=i;){var u=s.join(i,"package.json");if(n.existsSync(u)){u=require(u);e=(u.dependencies?.[pkgName]||u.devDependencies?.[pkgName])?.match(/(\d+\.\d+\.\d+)/)[0]||"none";break}i=s.dirname(i)}console.info(`
${p.prefix_globalVer||"Global version"}: `+d),console.info(`${p.prefix_localVer||"Local version"}: `+e)}else{const[j="",S=""]=process.argv.slice(2).filter(e=>!e.startsWith("-")).map(e=>e.replace(/^\/*/,""));let e=s.resolve(process.cwd(),j);j&&!n.existsSync(e)&&(d=e+".js",n.existsSync(d)?e=d:(console.error(`
${a+(p.prefix_error||"ERROR")}: `+`${p.error_firstArgNotExist||"First argument can only be an existing file or directory"}.`+`
${e} ${p.error_doesNotExist||"does not exist"}.[0m`),console.info(`
${c}${p.info_exampleValidCmd||"Example valid command"}: `+`
Â» minify-js . output.min.js[0m`),_(),process.exit(1)));d=e.endsWith(".js")&&!n.statSync(e).isDirectory()?[e]:o.findJS(e,{recursive:!g.noRecursion,verbose:!g.quietMode,ignoreFiles:(g.ignoreFiles?.split(",")??[]).map(e=>e.trim())});if(g.dryRun)0<d.length?(console.info(`
${l+(p.info_filesToBeMinned||"JS files to be minified")}:[0m`),d.forEach(e=>console.info(e))):console.info(`
${l+(p.info_noFilesWillBeMinned||"No JS files will be minified")}.[0m`);else{const b=[];d=d.map(e=>{var i=o.minify(e,{verbose:!g.quietMode,mangle:!g.noMangle,comment:g.comment?.replace(/\\n/g,"\n")});return i.error&&b.push(e),i}).filter(e=>!e.error);0<d?.length?(v(`
${c+(p.info_minComplete||"Minification complete")}![0m`),v(m+d.length+" "+(p.info_file||"file")+`${1<d.length?"s":""} ${p.info_minified||"minified"}.${t}`)):v(`
${l+(p.info_noFilesProcessed||"No unminified JavaScript files processed")}.[0m`),0<b.length&&(v(`
${a+b.length} `+(p.info_file||"file")+`${1<b.length?"s":""} ${p.info_failedToMinify||"failed to minify"}:${t}`),b.forEach(e=>v(e))),0!=d?.length&&(1==d?.length?(console.log(`
`+m+d[0].code+t),g.copy&&(v(`
${p.info_copying||"Copying to clipboard"}...`),i.writeSync(d[0].code))):(v(`
${p.info_writing||"Writing to file"}${1<d?.length?"s":""}...`),d?.forEach(({code:e,srcPath:i})=>{var o=s.join(s.dirname(i),(/so?u?rce?$/.test(s.dirname(i))?"../":"")+(S.endsWith(".js")?s.dirname(S):S||"min")),i=(S.endsWith(".js")&&j.endsWith(".js")?s.basename(S).replace(/(\.min)?\.js$/,""):s.basename(i,".js"))+`${g.noFilenameChange?"":".min"}.js`,i=s.join(o,i);n.existsSync(o)||n.mkdirSync(o,{recursive:!0}),n.writeFileSync(i,e,"utf8")})))}}function $(n){return new Promise((o,e)=>{var i=n.match(/^([^:]+):\/\//)[1];/^https?$/.test(i)||e(new Error(`${p.error_invalidURL||"Invalid URL"}.`)),require(i).get(n,e=>{let i="";e.on("data",e=>i+=e),e.on("end",()=>o({json:()=>JSON.parse(i)}))}).on("error",e)})}function y(e=["header","usage","pathArgs","flags","paramOptions","infoCmds"]){var i=`[106m[30m ${pkgName.replace(/^@[^/]+\//,"")} [0m `;const o={header:["\nâ”œ "+i+(p.appCopyright||copyright),i+(p.prefix_source||"Source")+": "+srcURL],usage:[`
${m}o ${p.helpSection_usage||"Usage"}:[0m`,` ${m}Â» `+c+cmdFormat+t],pathArgs:[`
${m}o ${p.helpSection_pathArgs||"Path arguments"}:[0m`," [inputPath]                         "+`${p.inputPathDesc_main||"Path to JS file or directory containing JS files to be minified"}, `+`${p.inputPathDesc_extra||"relative to the current working directory"}.`," [outputPath]                        "+`${p.outputPathDesc_main||"Path to file or directory where minified files will be stored"}, `+`${p.outputPathDesc_extra||"relative to original file location (if not provided, min/ is used)"}.`],flags:[`
${m}o ${p.helpSection_flags||"Boolean options"}:[0m`," -n, --dry-run                       "+`${p.optionDesc_dryRun||"Don't actually minify the file(s), just show if they will be processed"}.`,` -d, --include-dotfolders            ${p.optionDesc_dotfolders||"Include dotfolders in file search"}.`,` -D, --include-dotfiles              ${p.optionDesc_dotfiles||"Include dotfiles in file search"}.`,` -R, --no-recursion                  ${p.optionDesc_noRecursion||"Disable recursive file searching"}.`,` -M, --no-mangle                     ${p.optionDesc_noMangle||"Disable mangling names"}.`," -X, --no-filename-change            "+(p.optionDesc_noFilenameChange||"Disable changing file extension to .min.js"),` -c, --copy                          ${p.optionDesc_copy||"Copy minified code to clipboard instead of writing to file if single source file is processed"}.`,` -q, --quiet                         ${p.optionDesc_quiet||"Suppress all logging except errors"}.`],paramOptions:[`
${m}o ${p.helpSection_paramOptions||"Parameter options"}:[0m`,`--ignore-files="file1.js,file2.js"   ${p.optionDesc_ignoreFiles||"Files to exclude from minification"}.`,`--comment="comment"                  ${p.optionDesc_commentMain||"Prepend header comment to minified code"}.`+` ${p.optionDesc_commentExtra||"Separate by line using '\\n'"}.`],infoCmds:[`
${m}o ${p.helpSection_infoCmds||"Info commands"}:[0m`," -h, --help                          "+(p.optionDesc_help||"Display help screen."),` -v, --version                       ${p.optionDesc_version||"Show version number"}.`]};e.forEach(t=>{o[t]?.forEach(e=>{{var n=/header|usage/.test(t)?1:37;const s=process.stdout.columns||80,r=[],i=e.match(/\S+|\s+/g);let o="";i.forEach(e=>{var i=s-(0==r.length?0:n);o.length+"| ".length+e.length>i&&(r.push(0==r.length?o:o.trimStart()),o=""),o+=e}),r.push(0==r.length?o:o.trimStart()),r.forEach((e,i)=>console.info("| "+(0==i?e:" ".repeat(n)+e)))}})}),console.info(`
${p.info_moreHelp||"For more help"}, ${p.info_visit||"visit"}: `+m+docURL+t)}function _(){console.info(`
${p.info_moreHelp||"For more help"},`+` ${p.info_type||"type"} 'minify-js --help'`+` ${p.info_or||"or"} ${p.info_visit||"visit"}
`+m+docURL+t)}function v(e){g.quietMode||console.info(e)}})();
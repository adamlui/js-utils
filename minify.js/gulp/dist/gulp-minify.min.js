/**
 *  © 2024 Adam Lui under the MIT license.
 *  Source: https://code.minify-js.org/gulp
 *  Documentation: https://docs.minify-js.org/gulp
 */
const minifyJS=require("@adamlui/minify.js"),fs=require("fs"),path=require("path"),Transform=require("stream")["Transform"];function minify(s,r,t={}){if(t={recursive:!0,verbose:!0,dotFolders:!1,dotFiles:!1,mangle:!0,comment:"",...t},!s&&!r)return new Transform({objectMode:!0,transform(e,i,n){var s;e.isBuffer()&&(t.verbose&&console.info(`minify() » Minifying ${e.path}...`),s=minifyJS.minify(e.contents.toString(),{}),e.contents=Buffer.from(s.code)),this.push(e),n()}});var e=path.resolve(process.cwd(),s);if(s&&!fs.existsSync(e))console.error("\nminify() » ERROR: 1st: First argument can only be an existing file or directory."),console.info(`
minify() » ${e} does not exist.`);else{const{mangle:i,comment:n,...o}=t;(s.endsWith(".js")?[e]:minifyJS.findJS(e,o)).map(e=>minifyJS.minify(e,t)).filter(e=>!e.error)?.forEach(({code:e,srcPath:i})=>{var n=path.join(path.dirname(i),(/so?u?rce?$/.test(path.dirname(i))?"../":"")+(r.endsWith(".js")?path.dirname(r):r||"min")),i=(r.endsWith(".js")&&s.endsWith(".js")?path.basename(r).replace(/(\.min)?\.js$/,""):path.basename(i,".js"))+".min.js",i=path.join(n,i);fs.existsSync(n)||fs.mkdirSync(n,{recursive:!0}),fs.writeFileSync(i,e,"utf8")})}}module.exports=minify;
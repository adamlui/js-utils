const c=require("@adamlui/minify.js"),m=require("fs"),f=require("path"),a=require("stream")["Transform"];function e(r,s,n={}){if(0===arguments.length)return new a({objectMode:!0,transform(e,n,i){var r;e.isBuffer()&&(console.info(`minify() » Minifying ${e.path}...`),r=c.minify(e.contents.toString(),{}),e.contents=Buffer.from(r.code)),this.push(e),i()}});n={recursive:!0,verbose:!0,dotFolders:!1,dotFiles:!1,mangle:!0,comment:"",...n};var e=f.resolve(process.cwd(),r);if(r&&!m.existsSync(e))console.error("\nminify() » ERROR: 1st: First argument can only be an existing file or directory."),console.info(`
minify() » ${e} does not exist.`);else{const{mangle:i,comment:o,...t}=n;(r.endsWith(".js")?[e]:c.findJS(e,t)).map(e=>c.minify(e,n)).filter(e=>!e.error)?.forEach(({code:e,srcPath:n})=>{var i=f.join(process.cwd(),s.endsWith(".js")?f.dirname(s):s||"min"),n=(s.endsWith(".js")&&r.endsWith(".js")?f.basename(s).replace(/(\.min)?\.js$/,""):f.basename(n,".js"))+".min.js",n=f.join(i,n);m.existsSync(i)||m.mkdirSync(i,{recursive:!0}),m.writeFileSync(n,e,"utf8")})}}module.exports=e;
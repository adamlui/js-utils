let s;try{({randomInt:s}=require("crypto"))}catch(e){const t=window.crypto||window.msCrypto;s=(e,o)=>{var r=t?.getRandomValues(new Uint32Array(1))[0]/4294967295||Math.random();return Math.floor(r*(o-e))+e}}const i={generate:function(o={}){var e={verbose:!0,qty:1};if(f(o,e,"ipv4.generate({ verbose: false, qty: 3 })")){(o={...e,...o}).verbose&&console.info(`ipv4.generate() » Generating IPv4 address${1<o.qty?"es":""}...`);var r=[];if(1<o.qty)for(let e=0;e<o.qty;e++)r.push(this.generate({...o,qty:1,verbose:!1}));else{var t=[];for(let e=0;e<4;e++)t.push(s(0,256));r.push(t.join("."))}e=1<o.qty?r:r[0];return o.verbose&&(console.info(`ipv4.generate() » IPv4 address${1<o.qty?"es":""} generated!`),1===o.qty?console.info("ipv4.generate() » "+e):"undefined"!=typeof require&&require.main.filename.endsWith("cli.js")||console.info("ipv4.generate() » Check returned array.")),e}},validate:function(e,o={}){var r={verbose:!0};return"string"!=typeof e?console.error("ipv4.validate() » ERROR: 1st arg <address> must be a string."):f(o,r,"ipv4.validate('0.0.255.255', { verbose: false })")?((o={...r,...o}).verbose&&console.info("ipv4.validate() » Validating IPv4 address..."),e=!(4!==(r=e.split(".")).length||r.some(e=>!/^\d+$/.test(e)||parseInt(e,10)<0||255<parseInt(e,10))),o.verbose&&console.info(`ipv4.validate() » IP is ${e?"":"in"}valid IPv4 address!`),e):void 0}},e={generate:function(o={}){var e={verbose:!0,qty:1,leadingZeros:!1,doubleColon:!0};if(f(o,e,"ipv6.generate({ leadingZeros: true, qty: 5 })")){(o={...e,...o}).verbose&&console.info(`ipv6.generate() » Generating IPv6 address${1<o.qty?"es":""}...`);var r=[];if(1<o.qty)for(let e=0;e<o.qty;e++)r.push(this.generate({...o,qty:1,verbose:!1}));else{const t=[],{qty:n,...i}=o;for(let e=0;e<8;e++){let o="";for(let e=0;e<4;e++)o+=s(0,16).toString(16);t.push(o)}r.push(this.format(t.join(":"),{...i,verbose:!1}))}e=1<o.qty?r:r[0];return o.verbose&&(console.info(`ipv6.generate() » IPv6 address${1<o.qty?"es":""} generated!`),console.info(1===o.qty?"ipv6.generate() » "+e:"ipv6.generate() » Check returned array.")),e}},format:function(o,r={}){var t,n={verbose:!0,leadingZeros:!1,doubleColon:!0};if("string"!=typeof o)return console.error("ipv6.format() » ERROR: 1st arg <address> must be a string.");if(!this.validate(o,{verbose:!1}))return console.error(`ipv6.format() » ERROR:  ${o} is not a valid IPv6 address.`);if(f(r,n,"ipv6.format('0d::ffff:192.1.56.10/96', { leadingZeros: true, doubleColon: false })")){r={...n,...r};let e=o;if(e=r.doubleColon?(r.verbose&&console.info("ipv6.format() » Replacing zero series w/ '::'..."),e.replace(/:(?:0+:)+/,"::")):(r.verbose&&console.info("ipv6.format() » Expanding '::' into zero series..."),n=e.split(":").filter(Boolean).length,t=r.leadingZeros?"0000":"0",n=Array(8-n).fill(t).join(":"),e.replace("::",`:${n}:`)),r.leadingZeros){r.verbose&&console.info("ipv6.format() » Adding leading zeros...");var i=e.split(":");for(let e=0;e<i.length;e++)for(;i[e].length<4;)i[e]="0"+i[e];e=i.join(":")}else r.verbose&&console.info("ipv6.format() » Stripping leading zeros..."),e=o.replace(/(^|(?<=:))0+(?!:)/g,"$1");return r.verbose&&(e!==o?console.info("ipv6.format() » IP formatted successfully!"):console.info("ipv6.format() » IP already formatted to specs."),console.info("ipv6.format() » "+e)),e}},validate:function(e,o={}){var r={verbose:!0};if("string"!=typeof e)return console.error("ipv6.validate() » ERROR: 1st arg <address> must be a string.");if(f(o,r,"ipv6.validate('0:0:0:0:0:ffff:192.1.56.10/96', { verbose: false })")){(o={...r,...o}).verbose&&console.info("ipv6.validate() » Validating IPv6 address...");const t=e.split(/::?/),n=t[t.length-1];r=!(e.includes("::")&&2<e.split("::").length||/:{3,}/g.test(e)||t.length<2||8<t.length||t.some(e=>!(/^[\dA-Fa-f]{1,4}$/.test(e)||e===n&&i.validate(n.replace(/\/(?:0|(?:[1-2]?\d)|32|96)$/,""),{verbose:!1}))));return o.verbose&&console.info(`ipv6.validate() » IP is ${r?"":"in"}valid IPv6 address!`),r}}};function f(e,o,r){const t=(f.caller?.name||"validateOptions")+"() » ",n=JSON.stringify(o,null,2).replace(/"([^"]+)":/g,"$1:").replace(/"/g,"'").replace(/\n\s*/g," "),i=Object.keys(o).join(", "),s=Object.keys(o).filter(e=>"boolean"==typeof o[e]),a=Object.keys(o).filter(e=>Number.isInteger(o[e]));var l=()=>{console.info(t+`Valid options: [ ${i} ]`),console.info(t+"If omitted, default settings are: "+n)};if("object"!=typeof e)return console.error(t+"ERROR: [options] can only be an object of key/values."),console.info(t+"Example valid call: "+r),l(),!1;for(const v in e){if(!Object.prototype.hasOwnProperty.call(o,v))return console.error(t+`ERROR: \`${v}\` is an invalid option.`),l(),!1;if(s.includes(v)&&"boolean"!=typeof e[v])return console.error(t+`ERROR: [${v}] option can only be \`true\` or \`false\`.`),!1;if(a.includes(v)&&(e[v]=parseInt(e[v],10),isNaN(e[v])||e[v]<1))return console.error(t+`ERROR: [${v}] option can only be an integer > 0.`),!1}return!0}try{module.exports={ipv4:i,ipv6:e}}catch(e){}try{window.ipv4=i,window.ipv6=e}catch(e){}
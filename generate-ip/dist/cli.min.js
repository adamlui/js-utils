#!/usr/bin/env node
/**
 *  Â© 2024 Adam Lui & contributors under the MIT license.
 *  Source: https://code.js-utils.com/generate-ip
 *  Documentation: https://docs.js-utils.com/generate-ip
 */
const pkgName="generate-ip",docURL="https://docs.js-utils.com/generate-ip/#-command-line-usage",ipv4=require(__dirname.match(/src/)?"./generate-ip":"./generate-ip.min")["ipv4"],fs=require("fs"),path=require("path"),execSync=require("child_process")["execSync"],nc="[0m",br="[1;91m",by="[1;33m",bw="[1;97m",config={},argRegex={paramOptions:{qty:/^--?qu?a?n?ti?t?y(?:=.*|$)/},flags:{quietMode:/^--?q(?:uiet)?(?:-?mode)?$/},infoCmds:{help:/^--?h(?:elp)?$/,version:/^--?ve?r?s?i?o?n?$/}};if(process.argv.forEach(o=>{var e,n,r;o.startsWith("-")&&(e=Object.keys(argRegex.paramOptions).find(e=>argRegex.paramOptions[e].test(o)),r=Object.keys(argRegex.flags).find(e=>argRegex.flags[e].test(o)),n=Object.keys(argRegex.infoCmds).find(e=>argRegex.infoCmds[e].test(o)),r?config[r]=!0:e?(o.includes("=")||(console.error(`
${br}ERROR: Arg [--${o.replace(/-/g,"")}] requires '=' followed by a value.`+nc),printHelpCmdAndDocURL(),process.exit(1)),r=o.split("=")[1],config[e]=parseInt(r)||r):n||(console.error(`
${br}ERROR: Arg [${o}] not recognized.`+nc),console.info(`
${by}Valid arguments are below.`+nc),printHelpSections(["paramOptions","flags","infoCmds"]),printHelpCmdAndDocURL(),process.exit(1)))}),process.argv.some(e=>argRegex.infoCmds.help.test(e)))printHelpSections();else if(process.argv.some(e=>argRegex.infoCmds.version.test(e))){const k=execSync(`npm view ${pkgName} version`).toString().trim()||"none";let e,r=process.cwd();for(;"/"!=r;){const n=path.join(r,"package.json");if(fs.existsSync(n)){const o=require(n);e=(o.dependencies?.[pkgName]||o.devDependencies?.[pkgName])?.match(/(\d+\.\d+\.\d+)/)[0]||"none";break}r=path.dirname(r)}console.info(`
Global version: `+k),console.info("Local version: "+e)}else{config.qty&&(isNaN(config.qty)||config.qty<1)&&(console.error(`
${br}Error: [qty] argument can only be > 0.`+nc),printHelpCmdAndDocURL(),process.exit(1));const p=ipv4.generate({qty:config.qty||1,verbose:!config.quietMode});config.quietMode||(1<config.qty&&console.info(`[ ${p.join(", ")} ]`),console.info("\nCopying to clipboard...")),copyToClipboard(Array.isArray(p)?p.join("\n"):p)}function printHelpSections(e=["usage","paramOptions","flags","infoCmds"]){const o={usage:[`
${bw}Usage:`+nc," generate-ip [options|commands]"],paramOptions:[`
${bw}Parameter options:`+nc," --qty=n                     Generate n IP address(es)."],flags:[`
${bw}Boolean options:`+nc," -q, --quiet                 Suppress all logging except errors."],infoCmds:[`
${bw}Info commands:`+nc," -h, --help                  Display help screen."," -v, --version               Show version number."]};e.forEach(e=>{o[e]?.forEach(e=>{{const r=process.stdout.columns||80,s=[],o=e.match(/\S+|\s+/g);let n="";o.forEach(e=>{var o=r-(0==s.length?0:29);n.length+e.length>o&&(s.push(0==s.length?n:n.trimStart()),n=""),n+=e}),s.push(0==s.length?n:n.trimStart()),s.forEach((e,o)=>console.info(0==o?e:" ".repeat(29)+e))}})})}function printHelpCmdAndDocURL(){console.info(`
${by}For more help, type 'generate-ip --help' or visit
`+(docURL+nc))}function copyToClipboard(e){e=e.replace(/\s+$/,"").replace(/"/g,'""'),"darwin"==process.platform?execSync(`printf "${e}" | pbcopy`):"linux"==process.platform?execSync(`printf "${e}" | xclip -selection clipboard`):"win32"==process.platform&&execSync(`Set-Clipboard -Value "${e}"`,{shell:"powershell"})}
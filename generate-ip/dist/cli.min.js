#!/usr/bin/env node
const e="https://github.com/adamlui/js-utils/tree/main/generate-ip#-command-line-usage",o=require(__dirname.match(/src/)?"./generate-ip":"./generate-ip.min")["ipv4"],s=require("child_process")["execSync"],n="[0m",t="[1;91m",i="[1;33m",a={},p={paramOptions:{qty:/^--?qu?a?n?ti?t?y(?:=.*|$)/},flags:{quietMode:/^--?q(?:uiet)?(?:-?mode)?$/},infoCmds:{help:/^--?h(?:elp)?$/,version:/^--?ve?r?s?i?o?n?$/}};if(process.argv.forEach(o=>{var e,s,r;o.startsWith("-")&&(e=Object.keys(p.paramOptions).find(e=>p.paramOptions[e].test(o)),r=Object.keys(p.flags).find(e=>p.flags[e].test(o)),s=Object.keys(p.infoCmds).find(e=>p.infoCmds[e].test(o)),r?a[r]=!0:e?(o.includes("=")||(console.error(`
${t}ERROR: Arg [--${o.replace(/-/g,"")}] requires '=' followed by a value.`+n),c(),process.exit(1)),r=o.split("=")[1],a[e]=parseInt(r)||r):s||(console.error(`
${t}ERROR: Arg [${o}] not recognized.`+n),console.info(`
${i}Valid arguments are below.`+n),l(["paramOptions","flags","infoCmds"]),c(),process.exit(1)))}),process.argv.some(e=>p.infoCmds.help.test(e)))l();else if(process.argv.some(e=>p.infoCmds.version.test(e)))console.info("v"+require("./package.json").version);else{a.qty&&(isNaN(a.qty)||a.qty<1)&&(console.error(`
${t}Error: [qty] argument can only be > 0.`+n),c(),process.exit(1));const m=o.generate({qty:a.qty||1,verbose:!a.quietMode});a.quietMode||(1<a.qty&&console.info(`[ ${m.join(", ")} ]`),console.info("\nCopying to clipboard...")),r(Array.isArray(m)?m.join("\n"):m)}function l(e=["cmdFormat","paramOptions","flags","infoCmds"]){const o={cmdFormat:[`
${i}generate-ip [options|commands]`+n],paramOptions:["\nParameter options:"," --qty=n                     Generate n IP address(es)."],flags:["\nBoolean options:"," -q, --quiet                 Suppress all logging except errors."],infoCmds:["\nInfo commands:"," -h, --help                  Display help screen."," -v, --version               Show version number."]};e.forEach(e=>{o[e]?.forEach(e=>{{const r=process.stdout.columns||80,n=[],o=e.match(/\S+|\s+/g);let s="";o.forEach(e=>{var o=r-(0===n.length?0:29);s.length+e.length>o&&(n.push(0===n.length?s:s.trimStart()),s=""),s+=e}),n.push(0===n.length?s:s.trimStart()),n.forEach((e,o)=>console.info(0===o?e:" ".repeat(29)+e))}})})}function c(){console.info(`
${i}For more help, type 'generate-ip --help' or visit
`+(e+n))}function r(e){e=e.replace(/\s+$/,"").replace(/"/g,'""'),"darwin"===process.platform?s(`printf "${e}" | pbcopy`):"linux"===process.platform?s(`printf "${e}" | xclip -selection clipboard`):"win32"===process.platform&&s(`Set-Clipboard -Value "${e}"`,{shell:"powershell"})}
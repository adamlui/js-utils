#!/usr/bin/env node
const e=require(__dirname.match(/src/)?"./generate-ip":"./generate-ip.min")["ipv4"],o=require("child_process")["execSync"],r="[0m",n="[1;91m",t="[1;33m",i={},a={flags:{quietMode:/^--?q(?:uiet)?(?:-?mode)?$/},infoCmds:{help:/^--?h(?:elp)?$/,version:/^--?ve?r?s?i?o?n?$/}};if(process.argv.forEach(o=>{var e,s;o.startsWith("-")&&(e=Object.keys(a.flags).find(e=>a.flags[e].test(o)),s=Object.keys(a.infoCmds).find(e=>a.infoCmds[e].test(o)),e?i[e]=!0:s||(console.error(`
${n}ERROR: Arg [${o}] not recognized.`+r),console.info(`
${t}Valid arguments are below.`+r),c(["flags","infoCmds"]),process.exit(1)))}),process.argv.some(e=>a.infoCmds.help.test(e)))c();else if(process.argv.some(e=>a.infoCmds.version.test(e)))console.info("v"+require("./package.json").version);else{const l=e.generate({verbose:!i.quietMode});i.quietMode||console.info("\nCopying to clipboard..."),s(l)}function c(e=["cmdFormat","formatOptions","infoCmds"]){const o={cmdFormat:[`
${t}generate-ip [options|commands]`+r],flags:["\nBoolean options:"," -q, --quiet                 Suppress all logging except errors."],infoCmds:["\nInfo commands:"," -h, --help                  Display help screen."," -v, --version               Show version number."]};e.forEach(e=>{o[e]?.forEach(e=>{{const r=process.stdout.columns||80,n=[],o=e.match(/\S+|\s+/g);let s="";o.forEach(e=>{var o=r-(0===n.length?0:29);s.length+e.length>o&&(n.push(0===n.length?s:s.trimStart()),s=""),s+=e}),n.push(0===n.length?s:s.trimStart()),n.forEach((e,o)=>console.info(0===o?e:" ".repeat(29)+e))}})})}function s(e){e=e.replace(/\s+$/,"").replace(/"/g,'""'),"darwin"===process.platform?o(`printf "${e}" | pbcopy`):"linux"===process.platform?o(`printf "${e}" | xclip -selection clipboard`):"win32"===process.platform&&o(`Set-Clipboard -Value "${e}"`,{shell:"powershell"})}
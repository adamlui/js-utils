#!/usr/bin/env node
const docURL="https://github.com/adamlui/js-utils/tree/main/generate-ip#-command-line-usage",ipv4=require(__dirname.match(/src/)?"./generate-ip":"./generate-ip.min")["ipv4"],execSync=require("child_process")["execSync"],nc="[0m",br="[1;91m",by="[1;33m",config={},argRegex={paramOptions:{qty:/^--?qu?a?n?ti?t?y(?:=.*|$)/},flags:{quietMode:/^--?q(?:uiet)?(?:-?mode)?$/},infoCmds:{help:/^--?h(?:elp)?$/,version:/^--?ve?r?s?i?o?n?$/}};if(process.argv.forEach(arg=>{var matchedParamOption,matchedInfoCmd,matchedFlag;arg.startsWith("-")&&(matchedParamOption=Object.keys(argRegex.paramOptions).find(option=>argRegex.paramOptions[option].test(arg)),matchedFlag=Object.keys(argRegex.flags).find(flag=>argRegex.flags[flag].test(arg)),matchedInfoCmd=Object.keys(argRegex.infoCmds).find(cmd=>argRegex.infoCmds[cmd].test(arg)),matchedFlag?config[matchedFlag]=!0:matchedParamOption?(arg.includes("=")||(console.error(`
${br}ERROR: Arg [--${arg.replace(/-/g,"")}] requires '=' followed by a value.`+nc),printHelpCmdAndDocURL(),process.exit(1)),matchedFlag=arg.split("=")[1],config[matchedParamOption]=parseInt(matchedFlag)||matchedFlag):matchedInfoCmd||(console.error(`
${br}ERROR: Arg [${arg}] not recognized.`+nc),console.info(`
${by}Valid arguments are below.`+nc),printHelpSections(["paramOptions","flags","infoCmds"]),printHelpCmdAndDocURL(),process.exit(1)))}),process.argv.some(arg=>argRegex.infoCmds.help.test(arg)))printHelpSections();else if(process.argv.some(arg=>argRegex.infoCmds.version.test(arg)))console.info("v"+require("./package.json").version);else{config.qty&&(isNaN(config.qty)||config.qty<1)&&(console.error(`
${br}Error: [qty] argument can only be > 0.`+nc),printHelpCmdAndDocURL(),process.exit(1));const ipResult=ipv4.generate({qty:config.qty||1,verbose:!config.quietMode});config.quietMode||(1<config.qty&&console.info(`[ ${ipResult.join(", ")} ]`),console.info("\nCopying to clipboard...")),copyToClipboard(Array.isArray(ipResult)?ipResult.join("\n"):ipResult)}function printHelpSections(includeSections=["cmdFormat","paramOptions","flags","infoCmds"]){const helpSections={cmdFormat:[`
${by}generate-ip [options|commands]`+nc],paramOptions:["\nParameter options:"," --qty=n                     Generate n IP address(es)."],flags:["\nBoolean options:"," -q, --quiet                 Suppress all logging except errors."],infoCmds:["\nInfo commands:"," -h, --help                  Display help screen."," -v, --version               Show version number."]};includeSections.forEach(section=>{helpSections[section]?.forEach(line=>{{const terminalWidth=process.stdout.columns||80,lines=[],words=line.match(/\S+|\s+/g);let currentLine="";words.forEach(word=>{var lineLength=terminalWidth-(0===lines.length?0:29);currentLine.length+word.length>lineLength&&(lines.push(0===lines.length?currentLine:currentLine.trimStart()),currentLine=""),currentLine+=word}),lines.push(0===lines.length?currentLine:currentLine.trimStart()),lines.forEach((line,index)=>console.info(0===index?line:" ".repeat(29)+line))}})})}function printHelpCmdAndDocURL(){console.info(`
${by}For more help, type 'generate-ip --help' or visit
`+(docURL+nc))}function copyToClipboard(data){data=data.replace(/\s+$/,"").replace(/"/g,'""'),"darwin"===process.platform?execSync(`printf "${data}" | pbcopy`):"linux"===process.platform?execSync(`printf "${data}" | xclip -selection clipboard`):"win32"===process.platform&&execSync(`Set-Clipboard -Value "${data}"`,{shell:"powershell"})}
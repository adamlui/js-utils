let g;try{({randomInt:g}=require("crypto"))}catch(e){const o=window.crypto||window.msCrypto;g=(e,r)=>{var s=o?.getRandomValues(new Uint32Array(1))[0]/4294967295||Math.random();return Math.floor(s*(r-e))+e}}const h={lower:"abcdefghijklmnopqrstuvwxyz",upper:"ABCDEFGHIJKLMNOPQRSTUVWXYZ",numbers:"0123456789",symbols:"!@#$%^&*()-_=+[]{}/\\|;:'\",.<>?"};function a(o={}){var e={verbose:!0,length:8,qty:1,charset:"",exclude:"",numbers:!1,symbols:!1,lowercase:!0,uppercase:!0,strict:!1};if(m(o,e,"https://github.com/adamlui/js-utils/tree/main/generate-pw#generatepasswordoptions","generatePassword({ verbose: false, numbers: true })")){if(1<(o={...e,...o}).qty){const{qty:r,...s}=o;return i(r,s)}{var t,e="generatePasswords"===a.caller?.name;o.verbose&&!e&&console.info("generatePassword() » Initializing character set...");let r=o.charset||(o.numbers?h.numbers:"")+(o.symbols?h.symbols:"")+(o.lowercase?h.lower:"")+(o.uppercase?h.upper:""),s=(""===r&&(r=h.lower+h.upper),o.exclude&&(o.verbose&&!e&&console.info("generatePassword() » Removing excluded characters..."),r=r.replace(new RegExp(`[${o.exclude}]`,"g"),"")),o.verbose&&!e&&console.info("generatePassword() » Generating password..."),"");for(let e=0;e<o.length;e++){var n=g(0,r.length);s+=r.charAt(n)}return o.strict&&(o.verbose&&!e&&console.info("generatePassword() » Enforcing strict mode..."),t=["number","symbol","lower","upper"].filter(e=>o[e+"s"]||o[e+"case"]),s=l(s,t)),o.verbose&&!e&&(console.info("generatePassword() » Password generated!"),"undefined"!=typeof require&&require.main.filename.endsWith("cli.js")||console.info("generatePassword() » Check returned string.")),s}}}function i(r,s={}){var e="https://github.com/adamlui/js-utils/tree/main/generate-pw#generatepasswordsqty-options",o={verbose:!0,length:8,charset:"",exclude:"",numbers:!1,symbols:!1,lowercase:!0,uppercase:!0,strict:!1};if(r=parseInt(r,10),isNaN(r)||r<1)console.error("generatePasswords() » ERROR: 1st arg <qty> can only be an integer > 0."),console.info("generatePasswords() » For more help, please visit "+e);else if(m(s,o,e,"generatePasswords(3, { verbose: false, symbols: true })")){(s={...o,...s}).verbose&&console.info(`generatePasswords() » Generating password${1<r?"s":""}...`);var t=[];for(let e=0;e<r;e++)t.push(a(s));return s.verbose&&console.info(`generatePasswords() » Password${1<r?"s":""} generated!`),"undefined"!=typeof require&&require.main.filename.endsWith("cli.js")||console.info("generatePasswords() » Check returned array."),t}}function l(o,t=["number","symbol","lower","upper"],e={}){var r="https://github.com/adamlui/js-utils/tree/main/generate-pw#strictifypassword-requiredchartypes-options",n={verbose:!0};if("string"!=typeof o)console.error("strictify() » ERROR: 1st arg <password> must be a string."),console.info("strictify() » For more help, please visit "+r);else{var s=["number","symbol","lower","upper"];for(const f of t=Array.isArray(t)?t:[t])if(!s.includes(f))return console.error(`strictify() » ERROR: 2nd arg \`${f}\` is an invalid character type.`),console.info(`strictify() » Valid character types: [ ${s.map(e=>`'${e}'`).join(", ")} ]`),console.info("strictify() » Pass one as a string or more as an array, or all types will be required."),void console.info("strictify() » For more help, please visit "+r);if(m(e,n,r,"strictify('pa55word', ['symbol', 'upper'], { verbose: false })")){e={...n,...e};var a={};for(const p of t)a["has"+p.charAt(0).toUpperCase()+p.slice(1)]=!1;for(let e=0;e<o.length;e++)for(const d of t)(h[d]||h[d+"s"]).includes(o.charAt(e))&&(a["has"+d.charAt(0).toUpperCase()+d.slice(1)]=!0);e.verbose&&console.info("strictify() » Strictifying password...");var i=Math.min(o.length,t.length),l=[];let r=0,s=o;for(const u of t)if(r<i&&!a["has"+u.charAt(0).toUpperCase()+u.slice(1)]){let e;for(;e=g(0,o.length),l.includes(e););l.push(e);var c=h[u]||h[u+"s"];s=s.substring(0,e)+c.charAt(g(0,c.length))+s.substring(e+1),r++}return e.verbose&&(0<r?(console.info("strictify() » Password is now strict!"),console.info("strictify() » Check returned string.")):(console.info(`strictify() » Password already includes ${t.join(" + ")} characters!`),console.info("strictify() » No modifications made."))),s}}}function e(r,s={}){var e="https://github.com/adamlui/js-utils/tree/main/generate-pw#validatestrengthpassword-options",o={minLength:8,minLower:1,minUpper:1,minNumber:1,minSymbol:1},t={verbose:!0};if("string"!=typeof r)console.error("validateStrength() » ERROR: 1st arg <password> must be a string."),console.info("validateStrength() » For more help, please visit "+e);else if(m(s,t,e,"validateStrength('pa55word', { verbose: false })")){(s={...t,...s}).verbose&&console.info("validateStrength() » Validating password strength...");var n={lower:0,upper:0,number:0,symbol:0};for(const i of r)for(const l of Object.keys(n))(h[l]||h[l+"s"]).includes(i)&&n[l]++;var a=[];r.length<o.minLength&&a.push(`Make it at least ${o.minLength} characters long.`);for(const c of Object.keys(n))n[c]<o["min"+c.charAt(0).toUpperCase()+c.slice(1)]&&a.push("Include at least one "+c+`${["upper","lower"].includes(c)?"case letter":""}.`);let e=0;e+=r.length>=o.minLength?20:0;for(const f of Object.keys(n))e+=n[f]>=o["min"+f.charAt(0).toUpperCase()+f.slice(1)]?20:0;return s.verbose&&(console.info("validateStrength() » Password strength validated!"),console.info("validateStrength() » Check returned object for score/recommendations.")),{strengthScore:e,recommendations:a,isGood:80<=e}}}function m(e,r,s,o){const t=JSON.stringify(r,null,2).replace(/"([^"]+)":/g,"$1:").replace(/"/g,"'").replace(/\n\s*/g," "),n=Object.keys(r).join(", "),a=Object.keys(r).filter(e=>"boolean"==typeof r[e]),i=Object.keys(r).filter(e=>Number.isInteger(r[e])),l=(m.caller?.name||"validateOptions")+"() » ";var c=()=>{console.info(l+`Valid options: [ ${n} ]`),console.info(l+"If omitted, default settings are: "+t)},f=()=>{console.info(l+"For more help, please visit "+s)};if("object"!=typeof e)return console.error(l+"ERROR: [options] can only be an object of key/values."),console.info(l+"Example valid call: "+o),c(),f(),!1;for(const p in e){if(!Object.prototype.hasOwnProperty.call(r,p))return console.error(l+`ERROR: \`${p}\` is an invalid option.`),c(),f(),!1;if(a.includes(p)&&"boolean"!=typeof e[p])return console.error(l+`ERROR: [${p}] option can only be \`true\` or \`false\`.`),f(),!1;if(i.includes(p)&&(e[p]=parseInt(e[p],10),isNaN(e[p])||e[p]<1))return console.error(l+`ERROR: [${p}] option can only be an integer > 0.`),f(),!1}return!0}const r={generatePassword:a,generatePasswords:i,strictify:l,validateStrength:e};try{module.exports={...r}}catch(e){}try{window.pw={...r}}catch(e){}
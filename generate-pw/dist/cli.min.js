#!/usr/bin/env node
/**
 *  Â© 2024 Adam Lui & contributors under the MIT license.
 *  Source: https://code.js-utils.com/generate-pw
 *  Documentation: https://docs.js-utils.com/generate-pw
 */
const pkgName="generate-pw",copyright="Â© 2024 Adam Lui & contributors under the MIT license.",cmdFormat="generate-pw [options|commands]",srcURL="https://code.js-utils.com/generate-pw",docURL="https://docs.js-utils.com/generate-pw/#-command-line-usage",generatePassword=require(__dirname.match(/src/)?"./generate-pw":"./generate-pw.min")["generatePassword"],fs=require("fs"),path=require("path"),execSync=require("child_process")["execSync"],nc="[0m",br="[1;91m",by="[1;33m",bg="[1;92m",bw="[1;97m",config={},argRegex={paramOptions:{length:/^--?length(?:=.*|$)/,qty:/^--?qu?a?n?ti?t?y(?:=.*|$)/,charset:/^--?charse?t?(?:=.*|$)/,excludeChars:/^--?exclude(?:=.*|$)/},flags:{includeNums:/^--?(?:n|(?:include-?)?num(?:ber)?s?=?(?:true|1)?)$/,includeSymbols:/^--?(?:y|(?:include-?)?symbols?=?(?:true|1)?)$/,excludeLowerChars:/^--?(?:L|(?:exclude|disable|no)-?lower-?(?:case)?|lower-?(?:case)?=(?:false|0))$/,excludeUpperChars:/^--?(?:U|(?:exclude|disable|no)-?upper-?(?:case)?|upper-?(?:case)?=(?:false|0))$/,excludeSimilarChars:/^--?(?:S|(?:exclude|disable|no)-?similar-?(?:char(?:acter)?s?)?|similar-?(?:char(?:acter)?s?)?=(?:false|0))$/,strictMode:/^--?s(?:trict)?(?:-?mode)?$/,quietMode:/^--?q(?:uiet)?(?:-?mode)?$/},infoCmds:{help:/^--?h(?:elp)?$/,version:/^--?ve?r?s?i?o?n?$/}};if(process.argv.forEach(s=>{var e,r,o;s.startsWith("-")&&(e=Object.keys(argRegex.paramOptions).find(e=>argRegex.paramOptions[e].test(s)),o=Object.keys(argRegex.flags).find(e=>argRegex.flags[e].test(s)),r=Object.keys(argRegex.infoCmds).find(e=>argRegex.infoCmds[e].test(s)),o?config[o]=!0:e?(s.includes("=")||(console.error(`
${br}ERROR: Arg [--${s.replace(/-/g,"")}] requires '=' followed by a value.`+nc),printHelpCmdAndDocURL(),process.exit(1)),o=s.split("=")[1],config[e]=parseInt(o)||o):r||(console.error(`
${br}ERROR: Arg [${s}] not recognized.`+nc),console.info(`
${by}Valid arguments are below.`+nc),printHelpSections(["paramOptions","flags","infoCmds"]),printHelpCmdAndDocURL(),process.exit(1)))}),process.argv.some(e=>argRegex.infoCmds.help.test(e)))printHelpSections();else if(process.argv.some(e=>argRegex.infoCmds.version.test(e))){const k=execSync(`npm view ${pkgName} version`).toString().trim()||"none";let e,s=process.cwd();for(;"/"!=s;){const n=path.join(s,"package.json");if(fs.existsSync(n)){const o=require(n);e=(o.dependencies?.[pkgName]||o.devDependencies?.[pkgName])?.match(/(\d+\.\d+\.\d+)/)[0]||"none";break}s=path.dirname(s)}console.info(`
Global version: `+k),console.info("Local version: "+e)}else{for(const r of["length","qty"])config[r]&&(isNaN(config[r])||config[r]<1)&&(console.error(`
${br}Error: [${r}] argument can only be > 0.`+nc),printHelpCmdAndDocURL(),process.exit(1));const p={length:config.length||8,qty:config.qty||1,charset:config.charset,exclude:config.excludeChars,numbers:!!config.includeNums,symbols:!!config.includeSymbols,lowercase:!config.excludeLowerChars,uppercase:!config.excludeUpperChars,excludeSimilarChars:!!config.excludeSimilarChars,strict:!!config.strictMode,verbose:!config.quietMode},q=generatePassword(p);config.quietMode||console.info("\nCopying to clipboard..."),copyToClipboard(Array.isArray(q)?q.join("\n"):q)}function printHelpSections(e=["header","usage","paramOptions","flags","infoCmds"]){var s=`[106m[30m ${pkgName} ${nc} `;const r={header:[`
â”œ `+s+copyright,s+"Source: "+srcURL,s+"Doc: "+docURL],usage:[`
${bw}o Usage:`+nc,` ${bw}Â»${nc} `+(bg+cmdFormat+nc)],paramOptions:[`
${bw}o Parameter options:`+nc," --length=n                  Generate password(s) of n length."," --qty=n                     Generate n password(s)."," --charset=chars             Only include chars in password(s)."," --exclude=chars             Exclude chars from password(s)."],flags:[`
${bw}o Boolean options:`+nc," -n, --include-numbers       Allow numbers in password(s)."," -y, --include-symbols       Allow symbols in password(s)."," -L, --no-lowercase          Disallow lowercase letters in password(s)."," -U, --no-uppercase          Disallow uppercase letters in password(s)."," -S, --no-similar            Exclude similar characters in password(s)."," -s, --strict                Require at least one character from each allowed character set in password(s)."," -q, --quiet                 Suppress all logging except errors."],infoCmds:[`
${bw}o Info commands:`+nc," -h, --help                  Display help screen."," -v, --version               Show version number."]};e.forEach(a=>{r[a]?.forEach(e=>{{var o=/header|usage/.test(a)?1:29;const n=process.stdout.columns||80,c=[],s=e.match(/\S+|\s+/g);let r="";s.forEach(e=>{var s=n-(0==c.length?0:o);r.length+"| ".length+e.length>s&&(c.push(0==c.length?r:r.trimStart()),r=""),r+=e}),c.push(0==c.length?r:r.trimStart()),c.forEach((e,s)=>console.info("| "+(0==s?e:" ".repeat(o)+e)))}})})}function printHelpCmdAndDocURL(){console.info(`
${by}For more help, type 'generate-pw --help' or visit
`+(docURL+nc))}function copyToClipboard(e){e=e.replace(/\s+$/m,"").replace(/"/g,'""'),"darwin"==process.platform?execSync(`printf "${e}" | pbcopy`):"linux"==process.platform?execSync(`printf "${e}" | xclip -selection clipboard`):"win32"==process.platform&&execSync(`Set-Clipboard -Value "${e}"`,{shell:"powershell"})}
#!/usr/bin/env node
/**
 *  Â© 2024 Adam Lui under the MIT license.
 *  Source: https://code.js-utils.com/geolocate
 *  Documentation: https://docs.js-utils.com/geolocate
 */
(async()=>{const s="@adamlui/geolocate",e=require(__dirname.match(/src/)?"./geolocate":"./geolocate.min"),n=require("fs"),i=require("path"),r=require("child_process")["execSync"],o="[0m",t="[1;33m",l="[1;97m",c={},a={flags:{quietMode:/^--?q(?:uiet)?(?:-?mode)?$/},infoCmds:{help:/^--?h(?:elp)?$/,version:/^--?ve?r?s?i?o?n?$/}};if(process.argv.forEach(o=>{var e,s;o.startsWith("-")&&(e=Object.keys(a.flags).find(e=>a.flags[e].test(o)),s=Object.keys(a.infoCmds).find(e=>a.infoCmds[e].test(o)),e?c[e]=!0:s||(console.error(`
[1;91mERROR: Arg [${o}] not recognized.[0m`),console.info(`
${t}Valid arguments are below.[0m`),u(["flags","infoCmds"]),console.info(`
${t}For more help, type 'minify-js --help' or visit
https://docs.js-utils.com/geolocate/#-command-line-usage[0m`),process.exit(1)))}),process.argv.some(e=>a.infoCmds.help.test(e)))u();else if(process.argv.some(e=>a.infoCmds.version.test(e))){var p=r(`npm view ${s} version`).toString().trim()||"none";let e,o=process.cwd();for(;"/"!=o;){var m=i.join(o,"package.json");if(n.existsSync(m)){m=require(m);e=(m.dependencies?.[s]||m.devDependencies?.[s])?.match(/(\d+\.\d+\.\d+)/)[0]||"none";break}o=i.dirname(o)}console.info(`
Global version: `+p),console.info("Local version: "+e)}else{var f,d=process.argv.slice(2),g=[];for(let e=0;e<d.length;e++)d[e].startsWith("-")||(f=d[e].replace(/\[|\]/g,""),g.push(f));p=await e.locate(g,{verbose:!c.quietMode});p||process.exit(1),c.quietMode||1!=p.length||(console.info(`
IP: `+l+p[0].ip+o),console.info("Country: "+l+p[0].country+o),console.info("Region: "+l+p[0].regionName+o),console.info("City: "+l+p[0].city+o),console.info("Latitude: "+l+p[0].lat+o),console.info("Longitude: "+l+p[0].lon+o),console.info("ISP: "+l+p[0].isp+o)),c.quietMode||console.info("\nCopying to clipboard..."),h=(h=JSON.stringify(p)).replace(/\s+$/,"").replace(/"/g,'""'),"darwin"==process.platform?r(`printf "${h}" | pbcopy`):"linux"==process.platform?r(`printf "${h}" | xclip -selection clipboard`):"win32"==process.platform&&r(`Set-Clipboard -Value "${h}"`,{shell:"powershell"})}var h;function u(e=["cmdFormat","flags","infoCmds"]){const o={cmdFormat:[`
${t}geolocate [ip1] [ip2] [...] [options|commands][0m`],flags:["\nBoolean options:"," -q, --quiet                 Suppress all logging except errors."],infoCmds:["\nInfo commands:"," -h, --help                  Display help screen."," -v, --version               Show version number."]};e.forEach(e=>{o[e]?.forEach(e=>{{const n=process.stdout.columns||80,i=[],o=e.match(/\S+|\s+/g);let s="";o.forEach(e=>{var o=n-(0==i.length?0:29);s.length+e.length>o&&(i.push(0==i.length?s:s.trimStart()),s=""),s+=e}),i.push(0==i.length?s:s.trimStart()),i.forEach((e,o)=>console.info(0==o?e:" ".repeat(29)+e))}})})}})();
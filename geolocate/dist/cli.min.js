#!/usr/bin/env node
(async()=>{const s="@adamlui/geolocate",e=require(__dirname.match(/src/)?"./geolocate":"./geolocate.min"),o=require("generate-ip")["ipv4"],r=require("fs"),n=require("path"),i=require("child_process")["execSync"],t="[1;33m",a={},l={flags:{quietMode:/^--?q(?:uiet)?(?:-?mode)?$/},infoCmds:{help:/^--?h(?:elp)?$/,version:/^--?ve?r?s?i?o?n?$/}};if(process.argv.forEach(o=>{var e,s;o.startsWith("-")&&(e=Object.keys(l.flags).find(e=>l.flags[e].test(o)),s=Object.keys(l.infoCmds).find(e=>l.infoCmds[e].test(o)),e?a[e]=!0:s||(console.error(`
[1;91mERROR: Arg [${o}] not recognized.[0m`),console.info(`
${t}Valid arguments are below.[0m`),h(["flags","infoCmds"]),u(),process.exit(1)))}),process.argv.some(e=>l.infoCmds.help.test(e)))h();else if(process.argv.some(e=>l.infoCmds.version.test(e))){var c=i(`npm view ${s} version`).toString().trim()||"none";let e,o=process.cwd();for(;"/"!==o;){var p=n.join(o,"package.json");if(r.existsSync(p)){p=require(p);e=(p.dependencies?.[s]||p.devDependencies?.[s])?.match(/(\d+\.\d+\.\d+)/)[0]||"none";break}o=n.dirname(o)}console.info(`
Global version: `+c),console.info("Local version: "+e)}else{var m,f=process.argv.slice(2),d=[];for(let e=0;e<f.length;e++)f[e].startsWith("-")||(o.validate(f[e],{verbose:!1})?d.push(f[e]):(m=0==e?"st":1==e?"nd":"th",console.error(`ERROR: ${e+1+m} arg '${f[e]}' is not a valid IPv4 address.`),u(),process.exit(1)));0==d.length&&d.push(await e.getOwnIP()),d.forEach(e=>v(`Fetching geolocation data for ${e}...`));var g=[];for(const $ of d)g.push(await e.locate($));1==g.length&&v(g[0]),v("Copying to clipboard..."),c=(c=JSON.stringify(g)).replace(/\s+$/,"").replace(/"/g,'""'),"darwin"===process.platform?i(`printf "${c}" | pbcopy`):"linux"===process.platform?i(`printf "${c}" | xclip -selection clipboard`):"win32"===process.platform&&i(`Set-Clipboard -Value "${c}"`,{shell:"powershell"})}function h(e=["cmdFormat","flags","infoCmds"]){const o={cmdFormat:[`
${t}geolocate [ip] [options|commands][0m`],flags:["\nBoolean options:"," -q, --quiet                 Suppress all logging except errors."],infoCmds:["\nInfo commands:"," -h, --help                  Display help screen."," -v, --version               Show version number."]};e.forEach(e=>{o[e]?.forEach(e=>{{const r=process.stdout.columns||80,n=[],o=e.match(/\S+|\s+/g);let s="";o.forEach(e=>{var o=r-(0===n.length?0:29);s.length+e.length>o&&(n.push(0===n.length?s:s.trimStart()),s=""),s+=e}),n.push(0===n.length?s:s.trimStart()),n.forEach((e,o)=>console.info(0===o?e:" ".repeat(29)+e))}})})}function u(){console.info(`
${t}For more help, type 'minify-js --help' or visit
https://github.com/adamlui/js-utils/tree/main/geolocate#-command-line-usage[0m`)}function v(e){a.quietMode||console.info(e)}})();
#!/usr/bin/env node
/**
 *  Â© 2024 Adam Lui under the MIT license.
 *  Source: https://code.js-utils.com/geolocate
 *  Documentation: https://docs.js-utils.com/geolocate
 */
const pkgName="@adamlui/geolocate",copyright="Â© 2024 Adam Lui under the MIT license.",cmdFormat="geolocate [ip1] [ip2] [...] [options|commands]",srcURL="https://code.js-utils.com/geolocate",docURL="https://docs.js-utils.com/geolocate/#-command-line-usage";(async()=>{const e=require(__dirname.match(/src/)?"./geolocate":"./geolocate.min"),s=require("fs"),n=require("path"),i=require("child_process")["execSync"],r="[0m",t="[1;33m",c="[1;97m",a={},l={flags:{quietMode:/^--?q(?:uiet)?(?:-?mode)?$/},infoCmds:{help:/^--?h(?:elp)?$/,version:/^--?ve?r?s?i?o?n?$/}};if(process.argv.forEach(o=>{var e,s;o.startsWith("-")&&(e=Object.keys(l.flags).find(e=>l.flags[e].test(o)),s=Object.keys(l.infoCmds).find(e=>l.infoCmds[e].test(o)),e?a[e]=!0:s||(console.error(`
[1;91mERROR: Arg [${o}] not recognized.[0m`),console.info(`
${t}Valid arguments are below.[0m`),d(["configOptions","infoCmds"]),console.info(`
${t}For more help, type 'minify-js --help' or visit
`+docURL+r),process.exit(1)))}),process.argv.some(e=>l.infoCmds.help.test(e)))d();else if(process.argv.some(e=>l.infoCmds.version.test(e))){var p=i(`npm view ${pkgName} version`).toString().trim()||"none";let e,o=process.cwd();for(;"/"!=o;){var m=n.join(o,"package.json");if(s.existsSync(m)){m=require(m);e=(m.dependencies?.[pkgName]||m.devDependencies?.[pkgName])?.match(/(\d+\.\d+\.\d+)/)[0]||"none";break}o=n.dirname(o)}console.info(`
Global version: `+p),console.info("Local version: "+e)}else{var o,g=[];for(const h of process.argv.slice(2))h.startsWith("-")||(o=h.replace(/[[\]]/g,""),g.push(o));p=await e.locate(g,{verbose:!a.quietMode});p||process.exit(1),a.quietMode||1!=p.length||(console.info(`
IP: `+c+p[0].ip+r),console.info("Country: "+c+p[0].country+r),console.info("Region: "+c+p[0].regionName+r),console.info("City: "+c+p[0].city+r),console.info("Zip: "+c+p[0].zip+r),console.info("Latitude: "+c+p[0].lat+r),console.info("Longitude: "+c+p[0].lon+r),console.info("Time zone: "+c+p[0].timezone.replace(/_/g," ").replace(/\//g," / ")+r),console.info("ISP: "+c+p[0].isp+r)),a.quietMode||console.info("\nCopying to clipboard..."),f=(f=JSON.stringify(p)).replace(/\s+$/,"").replace(/"/g,'""'),"darwin"==process.platform?i(`printf "${f}" | pbcopy`):"linux"==process.platform?i(`printf "${f}" | xclip -selection clipboard`):"win32"==process.platform&&i(`Set-Clipboard -Value "${f}"`,{shell:"powershell"})}var f;function d(e=["header","usage","configOptions","infoCmds"]){var o=`[106m[30m ${pkgName.replace(/^@[^/]+\//,"")} [0m `;const s={header:[`
â”œ `+o+copyright,o+"Source: "+srcURL,o+"Doc: "+docURL],usage:[`
${c}o Usage:[0m`," [1;97mÂ»[0m [1;92m"+cmdFormat+r],configOptions:[`
${c}o Config options:[0m`," -q, --quiet                 Suppress all logging except errors."],infoCmds:[`
${c}o Info commands:[0m`," -h, --help                  Display help screen."," -v, --version               Show version number."]};e.forEach(t=>{s[t]?.forEach(e=>{{var n=/header|usage/.test(t)?1:29;const i=process.stdout.columns||80,r=[],o=e.match(/\S+|\s+/g);let s="";o.forEach(e=>{var o=i-(0==r.length?0:n);s.length+"| ".length+e.length>o&&(r.push(0==r.length?s:s.trimStart()),s=""),s+=e}),r.push(0==r.length?s:s.trimStart()),r.forEach((e,o)=>console.info("| "+(0==o?e:" ".repeat(n)+e)))}})})}})();
#!/usr/bin/env node
/**
 *  Â© 2024 Adam Lui under the MIT license.
 *  Source: https://github.js-utils.com/tree/main/geolocate/src
 *  Documentation: https://github.js-utils.com/tree/main/geolocate/docs
 */
(async()=>{const s="@adamlui/geolocate",e=require(__dirname.match(/src/)?"./geolocate":"./geolocate.min"),o=require("generate-ip")["ipv4"],n=require("fs"),i=require("path"),r=require("child_process")["execSync"],t="[0m",a="[1;33m",l="[1;97m",c={},p={flags:{quietMode:/^--?q(?:uiet)?(?:-?mode)?$/},infoCmds:{help:/^--?h(?:elp)?$/,version:/^--?ve?r?s?i?o?n?$/}};if(process.argv.forEach(o=>{var e,s;o.startsWith("-")&&(e=Object.keys(p.flags).find(e=>p.flags[e].test(o)),s=Object.keys(p.infoCmds).find(e=>p.infoCmds[e].test(o)),e?c[e]=!0:s||(console.error(`
[1;91mERROR: Arg [${o}] not recognized.[0m`),console.info(`
${a}Valid arguments are below.[0m`),v(["flags","infoCmds"]),$(),process.exit(1)))}),process.argv.some(e=>p.infoCmds.help.test(e)))v();else if(process.argv.some(e=>p.infoCmds.version.test(e))){var f=r(`npm view ${s} version`).toString().trim()||"none";let e,o=process.cwd();for(;"/"!=o;){var m=i.join(o,"package.json");if(n.existsSync(m)){m=require(m);e=(m.dependencies?.[s]||m.devDependencies?.[s])?.match(/(\d+\.\d+\.\d+)/)[0]||"none";break}o=i.dirname(o)}console.info(`
Global version: `+f),console.info("Local version: "+e)}else{var d,g=process.argv.slice(2),h=[];for(let e=0;e<g.length;e++)g[e].startsWith("-")||(d=g[e].replace(/\[|\]/g,""),o.validate(d,{verbose:!1})?h.push(d):(d=0==e?"st":1==e?"nd":"th",console.error(`ERROR: ${e+1+d} arg '${g[e]}' is not a valid IPv4 address.`),$(),process.exit(1)));0==h.length&&h.push(await e.getOwnIP()),h.forEach(e=>y(`Fetching geolocation data for ${e}...`));var u=[];for(const b of h)u.push(await e.locate(b));c.quietMode||1!=u.length||(console.info(`
IP: `+l+h[0]+t),console.info("Country: "+l+u[0].country+t),console.info("Region: "+l+u[0].regionName+t),console.info("City: "+l+u[0].city+t),console.info("Latitude: "+l+u[0].lat+t),console.info("Longitude: "+l+u[0].lon+t),console.info(`ISP: ${l+u[0].isp+t}
`)),y("Copying to clipboard..."),f=(f=JSON.stringify(u)).replace(/\s+$/,"").replace(/"/g,'""'),"darwin"==process.platform?r(`printf "${f}" | pbcopy`):"linux"==process.platform?r(`printf "${f}" | xclip -selection clipboard`):"win32"==process.platform&&r(`Set-Clipboard -Value "${f}"`,{shell:"powershell"})}function v(e=["cmdFormat","flags","infoCmds"]){const o={cmdFormat:[`
${a}geolocate [ip] [options|commands][0m`],flags:["\nBoolean options:"," -q, --quiet                 Suppress all logging except errors."],infoCmds:["\nInfo commands:"," -h, --help                  Display help screen."," -v, --version               Show version number."]};e.forEach(e=>{o[e]?.forEach(e=>{{const n=process.stdout.columns||80,i=[],o=e.match(/\S+|\s+/g);let s="";o.forEach(e=>{var o=n-(0==i.length?0:29);s.length+e.length>o&&(i.push(0==i.length?s:s.trimStart()),s=""),s+=e}),i.push(0==i.length?s:s.trimStart()),i.forEach((e,o)=>console.info(0==o?e:" ".repeat(29)+e))}})})}function $(){console.info(`
${a}For more help, type 'minify-js --help' or visit
https://github.com/adamlui/js-utils/tree/main/geolocate#-command-line-usage[0m`)}function y(e){c.quietMode||console.info(e)}})();
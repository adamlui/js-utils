name: Auto-update npm downloads shield in root README

on:
  schedule:
    - cron: "5 0 * * *" # every day 12:05a

jobs:
  update-downloads-shield:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout adamlui/js-utils
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_SYNC_PAT }}
          repository: adamlui/js-utils
          path: adamlui/js-utils
      
      - name: Fetch/sum download counts
        id: get-downloads
        run: |
          LC_NUMERIC=en_US # to insert commas
          packages=("@adamlui/minify.js" "@adamlui/scss-to-css" "generate-ip" "generate-pw")

          expand_num() { # expand nums abbreviated w/ 'k' or 'm' suffix to integers
            local num=$(echo "$1" | tr '[:upper:]' '[:lower:]') # convert to lowercase
            if [[ $num =~ k$ ]] ; then
              num="${num%k}" # remove 'k' suffix
              num=$(awk "BEGIN { printf \"%.0f\", $num * 1000 }") # multiply by 1000
            elif [[ $num =~ m$ ]] ; then
              num="${num%m}" # remove 'm' suffix
              num=$(awk "BEGIN { printf \"%.0f\", $num * 1000000 }") # multiply by 1000000
            fi ; echo "$num"
          }

          format_total() {
            local num=$1 ; first_digit="${num:0:1}" second_digit="${num:1:1}"
            second_digit=$(( second_digit < 5 ? 0 : 5 )) # round 2nd digit down
            if (( num >= 1000000000 )) ; then # 1B+ w/ one decimal place
              formatted_num="$(( num / 1000000000 ))"
              remainder=$(( (num % 1000000000) / 100000000 ))
              if (( remainder != 0 )) ; then formatted_num+=".$remainder" ; fi
              formatted_num+="B+"
            elif (( num >= 10000000 )) ; then # abbr 10,000,000+ to 999,000,000+
              formatted_num=$(printf "%'.f+" $((( num / 1000000 ) * 1000000 )))
            elif (( num >= 1000000 )) ; then # abbr 1,000,000+ to 9,500,000+
              formatted_num="${first_digit},${second_digit}00,000+"
            elif (( num >= 100000 )) ; then # abbr 100,000+ to 950,000+
              formatted_num="${first_digit}${second_digit}0,000+"
            elif (( num >= 10000 )) ; then # abbr 10,000+ to 90,000+
              formatted_num="${first_digit}0,000+"
            elif (( num >= 1000 )) ; then # abbr 1K to 9.9K
              formatted_num="$(( num / 1000 ))"
              remainder=$(( (num % 1000) / 100 ))
              if (( remainder != 0 )) ; then formatted_num+=".$remainder" ; fi
              formatted_num+="K"
            else formatted_num="$num" ; fi # preserve <1K as is
            echo "$formatted_num"
          }

          # Fetch/sum download counts
          for pkg in "${packages[@]}" ; do
            pkg_downloads=$(curl -s "https://img.shields.io/npm/dt/$pkg.svg" |
              sed -n 's/.*<title>downloads: \([0-9,.km]\+\)<\/title>.*/\1/Ip')
            pkg_downloads=$(expand_num "$pkg_downloads")
            echo "$pkg downloads: $pkg_downloads"
            total_downloads=$((total_downloads + pkg_downloads))
          done ; echo -e "\nTotal downloads: $total_downloads"

          # Format total
          formatted_total=$(format_total "$total_downloads")
          echo "Formatted total: $formatted_total"

          # Store for update step next
          echo "total_downloads=$formatted_total" >> $GITHUB_OUTPUT
      
      - name: Update README shield
        run: |
          cd ${{ github.workspace }}/adamlui/js-utils
          total_downloads=$(echo ${{ steps.get-downloads.outputs.total_downloads }})
          sed -i "s/badge\/Downloads-[0-9.km]\+-/badge\/Downloads-$total_downloads-/Ig" docs/README.md

      - name: Push to adamlui/js-utils
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          push_options: --force
          add_options: --all
          commit_user_email: auto-sync@kudoai.com
          commit_author: kudo-sync-bot <auto-sync@kudoai.com>
          commit_message: Updated npm downloads shield counter
          file_pattern: docs/README.md
          repository: adamlui/js-utils
